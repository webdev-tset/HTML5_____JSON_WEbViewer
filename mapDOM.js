

export default class MapDOM {
     constructor(){
          this.tags = {
               html5: ["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdo","bdi","big","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","datalist","dd","del","details","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1 Ã  h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","keygen","kbd","label","legend","li","link","main","map","mark","menu","meta","meter","nav","noframes","noscript","object","ol","optgroup","option","output","p","param","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strike","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"],
               attr: {"input":["accept","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","height","list","max","maxlength","min","multiple","name","onload","onsearch","pattern","placeholder","readonly","required","size","src","step","type","value","width"],"form":["accept-charset","action","autocomplete","enctype","method","name","novalidate","onreset","onsubmit","target"],"Global Attributes":["accesskey","class","contenteditable","data-*","dir","draggable","hidden","id","lang","spellcheck","style","tabindex","title","translate"],"Not supported in HTML 5.":["align","bgcolor","border","color"],"area":["alt","coords","download","href","hreflang","media","rel","shape","target"],"img":["alt","height","ismap","onabort","onerror","onload","sizes","src","srcset","usemap","width"],"script":["async","charset","defer","onerror","onload","src","type"],"button":["autofocus","disabled","form","formaction","name","type","value"],"select":["autofocus","disabled","form","multiple","name","required","size"],"textarea":["autofocus","cols","dirname","form","maxlength","name","placeholder","readonly","required","rows","wrap"],"audio":["autoplay","controls","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","preload","src"],"video":["autoplay","controls","height","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","poster","preload","width"],"meta":["charset","content","http-equiv","name"],"blockquote":["cite"],"del":["cite","datetime"],"ins":["cite","datetime"],"q":["cite"],"td":["colspan","headers","rowspan"],"th":["colspan","headers","rowspan","scope"],"object":["data","form","height","onabort","oncanplay","onerror","type","usemap","width"],"time":["datetime"],"track":["default","kind","label","oncuechange","src","srclang"],"fieldset":["disabled","form","name"],"optgroup":["disabled","label"],"option":["disabled","label","selected","value"],"textarea":["disabled"],"a":["download","href","hreflang","media","rel","target","type"],"label":["for","form"],"output":["for","name"],"meter":["form","high","low","max","min","optimum"],"output":["form"],"canvas":["height","width"],"embed":["height","onabort","oncanplay","onerror","src","type","width"],"iframe":["height","name","onload","sandbox","src","srcdoc","width"],"base":["href","target"],"link":["href","hreflang","media","onload","rel","type"],"progress":["max","value"],"source":["media","src","srcset"],"style":["media","onerror","onload","type"],"map":["name"],"object":["name"],"param":["name","value"],"body":["onafterprint","onbeforeprint","onbeforeunload","onerror","onhashchange","onload","onoffline","ononline","onpagehide","onpageshow","onpopstate","onresize","onstorage","onunload"],"All visible elements.":["onblur","onchange","onclick","oncontextmenu","oncopy","oncut","ondblclick","ondrag","ondragend","ondragenter","ondragleave","ondragover","ondragstart","ondrop","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onmousedown","onmousemove","onmouseout","onmouseover","onmouseup","onmousewheel","onpaste","onscroll","onselect","onwheel"],"details":["ontoggle","open"],"form":["rel"],"ol":["reversed","start"],"link,source":["sizes"],"col":["span"],"colgroup":["span"],"video":["src"],"menu":["type"],"source":["type"],"li":["value"],"meter":["value"]},
               events: {}
          }
          this.http = {
               status: {"100":[" Continue"," The server has received the request headers, and the client should proceed to send the request body"],"101":[" Switching Protocols","The requester has asked the server to switch protocols"],"103":[" Checkpoint","Used in the resumable requests proposal to resume aborted PUT or POST requests"],"200":[" OK","The request is OK (this is the standard response for successful HTTP requests)"],"201":[" Created","The request has been fulfilled, and a new resource is\n created \n "],"202":[" Accepted","The request has been accepted for processing, but the processing\n has not been completed\n "],"203":[" Non-Authoritative Information","The request has been successfully processed, but is returning information that may be from another source"],"204":[" No Content","The request has been successfully processed, but is not returning any content"],"205":[" Reset Content","The request has been successfully processed, but is not returning any content, and requires that the requester reset the document view"],"206":[" Partial Content","The server is delivering only part of the resource due to a range header sent by the client"],"300":[" Multiple Choices","A link list. The user can select a link and go to that\n location. Maximum five addresses  "],"301":[" Moved Permanently","The requested page has moved to a new URL \n "],"302":[" Found","The requested page has moved temporarily to a new URL \n "],"303":[" See Other","The requested page can be found under a different URL"],"304":[" Not Modified","Indicates the requested page has not been modified since last requested"],"306":[" Switch Proxy","No longer used"],"307":[" Temporary Redirect","The requested page has moved temporarily to a new URL"],"308":[" Resume Incomplete","Used in the resumable requests proposal to resume aborted PUT or POST requests"],"400":[" Bad Request","The request cannot be fulfilled due to bad syntax"],"401":[" Unauthorized","The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided"],"402":[" Payment Required","Reserved for future use\n "],"403":[" Forbidden","The request was a legal request, but the server is refusing to respond to it"],"404":[" Not Found","The requested page could not be found but may be available again in the future"],"405":[" Method Not Allowed","A request was made of a page using a request method not supported by that page"],"406":[" Not Acceptable","The server can only generate a response that is not\n accepted by the client\n "],"407":[" Proxy Authentication Required","The client must first authenticate itself with the proxy\n "],"408":[" Request Timeout","The server timed out waiting for the request\n "],"409":[" Conflict","The request could not be completed because of a conflict\n in the request"],"410":[" Gone","The requested page is no longer available"],"411":[" Length Required","The \"Content-Length\" is not defined. The server\n will not accept the request without it \n "],"412":[" Precondition Failed","The precondition given in the request evaluated to false by\n the server\n "],"413":[" Request Entity Too Large","The server will not accept the request, because the request entity is\n too large\n "],"414":[" Request-URI Too Long","The server will not accept the request, because the URL is\n too long. Occurs when you convert a POST request to a GET request with\n a long query information \n "],"415":[" Unsupported Media Type","The server will not accept the request, because the media\n type is not supported \n "],"416":[" Requested Range Not Satisfiable","The client has asked for a portion of the file, but the server cannot supply that portion"],"417":[" Expectation Failed","The server cannot meet the requirements of the Expect request-header field"],"500":[" Internal Server Error","A generic error message, given when no more specific message is suitable"],"501":[" Not Implemented","The server either does not recognize the request method, or it lacks the ability to fulfill the request"],"502":[" Bad Gateway","The server was acting as a gateway or proxy and received an invalid response from the upstream server"],"503":[" Service Unavailable","The server is currently unavailable (overloaded or down)\n "],"504":[" Gateway Timeout","The server was acting as a gateway or proxy and did not receive a timely response from the upstream server"],"505":[" HTTP Version Not Supported","The server does not support the HTTP protocol version used in the request\n "],"511":[" Network Authentication Required","The client needs to authenticate to gain network access"]},
          }
          this.browser = {
               history: [["length"], ["back", "forward", "go"]],
               location: [["hash", "host", "hostname", "hred", "pathname", "port", "protocol", "search"], ["assign", "reload", "replace"]],
               navigator: [["appCodeName", "appName", "appVersion", "cookieEnabled", "platform", "userAgent"], ["javaEnabled", "taintEnabled"]],
               screen: [["availHeight", "availWidth", "colorDepth", "height", "pixelDepth", "width"]],
               window: [["closed", "defaultStatus", "document", "frames", "history", "innerHeight", "innerWidth", "length", "location", "name", "navigator", "opener", "outerHeight", "outerWidth", "pageXOffset", "pageYOffset", "parent", "screen", "screenLeft", "screenTop", "screenX", "screenY", "self", "status", "top"], ["alert", "blur", "clearInterval", "clearTimeout", "close", "confirm", "createPopup", "focus", "moveBy", "open", "moveTo", "print", "prompt", "resizeBy", "resizeTo", "scroll", "scrollBy", "scrollTo", "setInterval", "setTimeout"]]
          }
          this.dom = {
               // L'OBJET   attr_categorised_by_tag   N'EST PAS COMPLET
               attr_categorised_by_tag: {"Global Attributes":["accesskey","class","contenteditable","data-*","dir","draggable","hidden","id","lang","spellcheck","style","tabindex","title","translate"],"input":["accept","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","height","list","max","maxlength","min","multiple","name","onload","onsearch","pattern","placeholder","readonly","required","size","src","step","type","value","width"],"form":["accept-charset","action","autocomplete","enctype","method","name","novalidate","onreset","onsubmit","target"],"Not supported in HTML 5.":["align","bgcolor","border","color"],"area":["alt","coords","download","href","hreflang","media","rel","shape","target"],"img":["alt","height","ismap","onabort","onerror","onload","sizes","src","srcset","usemap","width"],"script":["async","charset","defer","onerror","onload","src","type"],"button":["autofocus","disabled","form","formaction","name","type","value"],"select":["autofocus","disabled","form","multiple","name","required","size"],"textarea":["autofocus","cols","dirname","form","maxlength","name","placeholder","readonly","required","rows","wrap"],"audio":["autoplay","controls","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","preload","src"],"video":["autoplay","controls","height","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","poster","preload","width"],"meta":["charset","content","http-equiv","name"],"blockquote":["cite"],"del":["cite","datetime"],"ins":["cite","datetime"],"q":["cite"],"td":["colspan","headers","rowspan"],"th":["colspan","headers","rowspan","scope"],"object":["data","form","height","onabort","oncanplay","onerror","type","usemap","width"],"time":["datetime"],"track":["default","kind","label","oncuechange","src","srclang"],"fieldset":["disabled","form","name"],"optgroup":["disabled","label"],"option":["disabled","label","selected","value"],"textarea":["disabled"],"a":["download","href","hreflang","media","rel","target","type"],"label":["for","form"],"output":["for","name"],"meter":["form","high","low","max","min","optimum"],"output":["form"],"canvas":["height","width"],"embed":["height","onabort","oncanplay","onerror","src","type","width"],"iframe":["height","name","onload","sandbox","src","srcdoc","width"],"base":["href","target"],"link":["href","hreflang","media","onload","rel","type"],"progress":["max","value"],"source":["media","src","srcset"],"style":["media","onerror","onload","type"],"map":["name"],"object":["name"],"param":["name","value"],"body":["onafterprint","onbeforeprint","onbeforeunload","onerror","onhashchange","onload","onoffline","ononline","onpagehide","onpageshow","onpopstate","onresize","onstorage","onunload"],"All visible elements.":["onblur","onchange","onclick","oncontextmenu","oncopy","oncut","ondblclick","ondrag","ondragend","ondragenter","ondragleave","ondragover","ondragstart","ondrop","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onmousedown","onmousemove","onmouseout","onmouseover","onmouseup","onmousewheel","onpaste","onscroll","onselect","onwheel"],"details":["ontoggle","open"],"form":["rel"],"ol":["reversed","start"],"link,source":["sizes"],"col":["span"],"colgroup":["span"],"video":["src"],"menu":["type"],"source":["type"],"li":["value"],"meter":["value"]},
               // L'OBJET   html5    EST LE BIEN PLUS COMPLET ET Ã JOUR QUE   attr_categorised_by_tag
               html5: {
                    "!--...--": {}, 
                    a: {}, 
                    abbr: {}, 
                    acronym: {}, 
                    address: {}, 
                    applet: {}, 
                    area: {}, 
                    article: {}, 
                    aside: {}, 
                    audio: {}, 
                    b: {}, 
                    base: {}, 
                    basefont: {}, 
                    bdo: {}, 
                    bdi: {}, 
                    big: {}, 
                    blockquote: {}, 
                    body: {}, 
                    br: {}, 
                    button: {}, 
                    canvas: {}, 
                    caption: {}, 
                    center: {}, 
                    cite: {}, 
                    code: {}, 
                    col: {}, 
                    colgroup: {}, 
                    command: {}, 
                    datalist: {}, 
                    dd: {}, 
                    del: {}, 
                    details: {}, 
                    dfn: {}, 
                    dir: {}, 
                    div: {}, 
                    dl: {}, 
                    dt: {}, 
                    em: {}, 
                    embed: {}, 
                    fieldset: {}, 
                    figcaption: {}, 
                    figure: {}, 
                    font: {}, 
                    footer: {}, 
                    form: {}, 
                    frame: {}, 
                    frameset: {}, 
                    h$: {}, 
                    h1: {}, 
                    h2: {}, 
                    h3: {}, 
                    h4: {}, 
                    h5: {}, 
                    h6: {}, 
                    head: {}, 
                    header: {}, 
                    hgroup: {}, 
                    hr: {}, 
                    html: {}, 
                    i: {}, 
                    iframe: {}, 
                    img: {}, 
                    input: {}, 
                    ins: {}, 
                    keygen: {}, 
                    kbd: {}, 
                    label: {}, 
                    legend: {}, 
                    li: {}, 
                    link: {}, 
                    main: {}, 
                    map: {}, 
                    mark: {}, 
                    menu: {}, 
                    meta: {}, 
                    meter: {}, 
                    nav: {}, 
                    noframes: {}, 
                    noscript: {}, 
                    object: {}, 
                    ol: {}, 
                    optgroup: {}, 
                    option: {}, 
                    output: {}, 
                    p: {}, 
                    param: {}, 
                    pre: {}, 
                    progress: {}, 
                    q: {}, 
                    rp: {}, 
                    rt: {}, 
                    ruby: {}, 
                    s: {}, 
                    samp: {}, 
                    script: {}, 
                    section: {}, 
                    select: {}, 
                    small: {}, 
                    source: {}, 
                    span: {}, 
                    strike: {}, 
                    strong: {}, 
                    style: {}, 
                    sub: {}, 
                    summary: {}, 
                    sup: {}, 
                    table: {}, 
                    tbody: {}, 
                    td: {}, 
                    textarea: {}, 
                    tfoot: {}, 
                    th: {}, 
                    thead: {}, 
                    time: {}, 
                    title: {}, 
                    tr: {}, 
                    track: {}, 
                    tt: {}, 
                    u: {}, 
                    ul: {}, 
                    var: {}, 
                    video: {}, 
                    wbr: {}, 
                    xmp: {}
               },
               html5_by_12Categories: {"basic":{"!DOCTYPE ":{"descr":"Defines the document type"},"html":{"descr":"Defines an HTML document"},"head":{"descr":"Contains metadata/information for the document"},"title":{"descr":"Defines a title for the document"},"body":{"descr":"Defines the document's body"},"h1 to h6":{"descr":" Defines HTML headings"},"p":{"descr":"Defines a paragraph"},"br":{"descr":"Inserts a single line break"},"hr":{"descr":" Defines a thematic change in the content"},"!--...--":{"descr":"Defines a comment"}},"formatting":{"abbr":{"descr":"Defines an abbreviation or an acronym"},"address":{"descr":"Defines contact information for the author/owner of a document/article"},"b":{"descr":"Defines bold text"},"bdi":{"descr":"Isolates a part of text that might be formatted in a different direction \nfrom other text outside it"},"bdo":{"descr":"Overrides the current text direction"},"blockquote":{"descr":"Defines a section that is quoted from another source"},"cite":{"descr":"Defines the title of a work"},"code":{"descr":"Defines a piece of computer code"},"del":{"descr":"Defines text that has been deleted from a document"},"dfn":{"descr":"Specifies a term that is going to be defined within the content"},"em":{"descr":"Defines emphasized text "},"i":{"descr":"Defines a part of text in an alternate voice or mood"},"ins":{"descr":"Defines a text that has been inserted into a document"},"kbd":{"descr":"Defines keyboard input"},"mark":{"descr":"Defines marked/highlighted text"},"meter":{"descr":"Defines a scalar measurement within a known range (a gauge)"},"pre":{"descr":"Defines preformatted text"},"progress":{"descr":"Represents the progress of a task"},"q":{"descr":"Defines a short quotation"},"rp":{"descr":"Defines what to show in browsers that do not support ruby annotations"},"rt":{"descr":"Defines an explanation/pronunciation of characters (for East Asian \ntypography)"},"ruby":{"descr":"Defines a ruby annotation (for East Asian typography)"},"s":{"descr":"Defines text that is no longer correct"},"samp":{"descr":"Defines sample output from a computer program"},"small":{"descr":"Defines smaller text"},"strong":{"descr":"Defines important text"},"sub":{"descr":"Defines subscripted text"},"sup":{"descr":"Defines superscripted text"},"template":{"descr":"Defines a container for content that should be hidden when the page loads"},"time":{"descr":"Defines a specific time (or datetime)"},"u":{"descr":"Defines some text that is unarticulated and styled differently from normal \ntext"},"var":{"descr":"Defines a variable"},"wbr":{"descr":"Defines a possible line-break"}},"forms":{"form":{"descr":"Defines an HTML form for user input"},"input":{"descr":"Defines an input control"},"textarea":{"descr":"Defines a multiline input control (text area)"},"button":{"descr":"Defines a clickable button"},"select":{"descr":"Defines a drop-down list"},"optgroup":{"descr":"Defines a group of related options in a drop-down list"},"option":{"descr":"Defines an option in a drop-down list"},"label":{"descr":"Defines a label for an <input> element"},"fieldset":{"descr":"Groups related elements in a form"},"legend":{"descr":"Defines a caption for a <fieldset> element"},"datalist":{"descr":"Specifies a list of pre-defined options for input controls"},"output":{"descr":"Defines the result of a calculation"}},"frames":{"iframe":{"descr":"Defines an inline frame"}},"images":{"img":{"descr":"Defines an image"},"map":{"descr":"Defines a client-side image map "},"area":{"descr":"Defines an area inside an image map"},"canvas":{"descr":"Used to draw graphics, on the fly, via scripting (usually JavaScript)"},"figcaption":{"descr":"Defines a caption for a <figure> element"},"figure":{"descr":"Specifies self-contained content"},"picture":{"descr":"Defines a container for multiple image resources"},"svg":{"descr":"Defines a container for SVG graphics"}},"medias":{"audio":{"descr":"Defines sound content"},"source":{"descr":"Defines multiple media resources for media elements (<video>, <audio> \nand <picture>)"},"track":{"descr":"Defines text tracks for media elements (<video> and <audio>)"},"video":{"descr":"Defines a video or movie"}},"links":{"a":{"descr":"Defines a hyperlink"},"link":{"descr":"Defines the relationship between a document and an external resource (most \nused to link to style sheets)"},"nav":{"descr":"Defines navigation links"}},"lists":{"ul":{"descr":"Defines an unordered list"},"ol":{"descr":"Defines an ordered list"},"li":{"descr":"Defines a list item"},"dl":{"descr":"Defines a description list"},"dt":{"descr":"Defines a term/name in a description list"},"dd":{"descr":"Defines a description of a term/name in a description list"}},"tables":{"table":{"descr":"Defines a table"},"caption":{"descr":"Defines a table caption"},"th":{"descr":"Defines a header cell in a table"},"tr":{"descr":"Defines a row in a table"},"td":{"descr":"Defines a cell in a table"},"thead":{"descr":"Groups the header content in a table"},"tbody":{"descr":"Groups the body content in a table"},"tfoot":{"descr":"Groups the footer content in a table"},"col":{"descr":"Specifies column properties for each column within a <colgroup> element "},"colgroup":{"descr":"Specifies a group of one or more columns in a table for formatting"}},"semantics":{"style":{"descr":"Defines style information for a document"},"div":{"descr":"Defines a section in a document"},"span":{"descr":"Defines a section in a document"},"header":{"descr":"Defines a header for a document or section"},"footer":{"descr":"Defines a footer for a document or section"},"main":{"descr":"Specifies the main content of a document"},"section":{"descr":"Defines a section in a document"},"article":{"descr":"Defines an article"},"aside":{"descr":"Defines content aside from the page content"},"details":{"descr":"Defines additional details that the user can view or hide"},"dialog":{"descr":"Defines a dialog box or window"},"summary":{"descr":"Defines a visible heading for a <details> element"},"data":{"descr":"Adds a machine-readable \ntranslation of a given content"}},"metas":{"head":{"descr":"Defines information about the document"},"meta":{"descr":"Defines metadata about an HTML document"},"base":{"descr":"Specifies the base URL/target for all relative URLs in a document"}},"coding":{"script":{"descr":"Defines a client-side script"},"noscript":{"descr":"Defines an alternate content for users that do not support \nclient-side scripts"},"embed":{"descr":"Defines a container for an external (non-HTML) application"},"object":{"descr":"Defines an embedded object"},"param":{"descr":"Defines a parameter for an object"}}},
               
          }
          this.domObjects = {
               // https://www.w3schools.com/jsref/
               attributes: {"properties":["isId","name","value","specified","length"], "methods":["getNamedItem","item","removeNamedItem","setNamedItem"]},
               document: {"properties":[["activeElement","Returns the currently focused element in the document"],["anchors","Returns a collection of all <a> elements in the document that have a name attribute"],["applets","Returns a collection of all <applet> elements in the document"],["baseURI","Returns the absolute base URI of a document"],["body","Sets or returns the document's body (the <body> element)"],["cookie","Returns all name/value pairs of cookies in the document"],["charset","Deprecated. Use characterSet instead. Returns the character encoding for the document"],["characterSet","Returns the character encoding for the document"],["defaultView","Returns the window object associated with a document, or null if none is available."],["designMode","Controls whether the entire document should be editable or not."],["doctype","Returns the Document Type Declaration associated with the document"],["documentElement","Returns the Document Element of the document (the <html> element)"],["documentMode","Returns the mode used by the browser to render the document"],["documentURI","Sets or returns the location of the document"],["domain","Returns the domain name of the server that loaded the document"],["domConfig","Obsolete. Returns the DOM configuration of the document"],["embeds","Returns a collection of all <embed> elements the document"],["forms","Returns a collection of all <form> elements in the document"],["fullscreenElement","Returns the current element that is displayed in fullscreen mode"],["head","Returns the <head> element of the document"],["images","Returns a collection of all <img> elements in the document"],["implementation","Returns the DOMImplementation object that handles this document"],["inputEncoding","Returns the encoding, character set, used for the document"],["lastModified","Returns the date and time the document was last modified"],["links","Returns a collection of all <a> and elements in the document that have a href attribute"],["readyState","Returns the (loading) status of the document"],["referrer","Returns the URL of the document that loaded the current document"],["scripts","Returns a collection of <script> elements in the document"],["strictErrorChecking","Sets or returns whether error-checking is enforced or not"],["title","Sets or returns the title of the document"],["URL","Returns the full URL of the HTML document"]],"methods":[["addEventListener","Attaches an event handler to the document"],["adoptNode","Adopts a node from another document"],["close","Closes the output stream previously opened with document.open()"],["createAttribute","Creates an attribute node"],["createComment","Creates a Comment node with the specified text"],["createDocumentFragment","Creates an empty DocumentFragment node"],["createElement","Creates an Element node"],["createEvent","Creates a new event"],["createTextNode","Creates a Text node"],["execCommand","Invokes the specified clipboard operation on the element currently having focus."],["fullscreenEnabled","Returns a Boolean value indicating whether the document can be viewed in fullscreen mode"],["getElementById","Returns the element that has the ID attribute with the specified value"],["getElementsByClassName","Returns a HTMLCollection containing all elements with the specified class name"],["getElementsByName","Returns a HTMLCollection containing all elements with a specified name"],["getElementsByTagName","Returns a HTMLCollection containing all elements with the specified tag name"],["hasFocus","Returns a Boolean value indicating whether the document has focus"],["importNode","Imports a node from another document"],["normalize","Removes empty Text nodes, and joins adjacent nodes"],["normalizeDocument","Removes empty Text nodes, and joins adjacent nodes"],["open","Opens an HTML output stream to collect output from document.write()"],["querySelector","Returns the first element that matches a specified CSS selector(s) in the document"],["querySelectorAll","Returns a static NodeList containing all elements that matches a specified CSS selector(s) in the document"],["removeEventListener","Removes an event handler from the document (that has been attached with the addEventListener() method)"],["renameNode","Renames the specified node"],["write","Writes HTML expressions or JavaScript code to a document"],["writeln","Same as write(), but adds a newline character after each statement"]]},
               document_: {
                    collections: ["anchors", "forms", "images", "links"],
                    properties: ["cookie", "documentMode", "domain", "lastModified", "readyState", "referrer", "title", "URL"],
                    methods: ["close", "getElementById", "getElementsByName"]
               },
               element: {"properties":[["accessKey","Sets or returns the accesskey attribute of an element"],["attributes","Returns a NamedNodeMap of an element's attributes"],["childElementCount","Returns the number of child elements an element has"],["childNodes","Returns a collection of an element's child nodes (including text and comment nodes)"],["children","Returns a collection of an element's child element (excluding text and comment nodes)"],["classList","Returns the class name(s) of an element"],["className","Sets or returns the value of the class attribute of an element"],["clientHeight","Returns the height of an element, including padding"],["clientLeft","Returns the width of the left border of an element"],["clientTop","Returns the width of the top border of an element"],["clientWidth","Returns the width of an element, including padding"],["contentEditable","Sets or returns whether the content of an element is editable or not"],["dir","Sets or returns the value of the dir attribute of an element"],["firstChild","Returns the first child node of an element"],["firstElementChild","Returns the first child element of an element"],["id","Sets or returns the value of the id attribute of an element"],["innerHTML","Sets or returns the content of an element"],["innerText","Sets or returns the text content of a node and its descendants"],["isContentEditable","Returns true if the content of an element is editable, otherwise false"],["lang","Sets or returns the value of the lang attribute of an element"],["lastChild","Returns the last child node of an element"],["lastElementChild","Returns the last child element of an element"],["namespaceURI","Returns the namespace URI of an element"],["nextSibling","Returns the next node at the same node tree level"],["nextElementSibling","Returns the next element at the same node tree level"],["nodeName","Returns the name of a node"],["nodeType","Returns the node type of a node"],["nodeValue","Sets or returns the value of a node"],["offsetHeight","Returns the height of an element, including padding, border and scrollbar"],["offsetWidth","Returns the width of an element, including padding, border and scrollbar"],["offsetLeft","Returns the horizontal offset position of an element"],["offsetParent","Returns the offset container of an element"],["offsetTop","Returns the vertical offset position of an element"],["outerHTML","Sets or returns the content of an element (including the start tag and the end tag)"],["outerText","Sets or returns the outer text content of a node and its descendants"],["ownerDocument","Returns the root element (document object) for an element"],["parentNode","Returns the parent node of an element"],["parentElement","Returns the parent element node of an element"],["previousSibling","Returns the previous node at the same node tree level"],["previousElementSibling","Returns the previous element at the same node tree level"],["scrollHeight","Returns the entire height of an element, including padding"],["scrollLeft","Sets or returns the number of pixels an element's content is scrolled horizontally"],["scrollTop","Sets or returns the number of pixels an element's content is scrolled vertically"],["scrollWidth","Returns the entire width of an element, including padding"],["style","Sets or returns the value of the style attribute of an element"],["tabIndex","Sets or returns the value of the tabindex attribute of an element"],["tagName","Returns the tag name of an element"],["textContent","Sets or returns the textual content of a node and its descendants"],["title","Sets or returns the value of the title attribute of an element"]],"methods":[["addEventListener","Attaches an event handler to the specified element"],["appendChild","Adds a new child node, to an element, as the last child node"],["blur","Removes focus from an element"],["click","Simulates a mouse-click on an element"],["cloneNode","Clones an element"],["closest","Searches up the DOM tree for the closest element which matches a specified CSS selector"],["compareDocumentPosition","Compares the document position of two elements"],["contains","Returns true if a node is a descendant of a node, otherwise false"],["exitFullscreen","Cancels an element in fullscreen mode"],["focus","Gives focus to an element"],["getAttribute","Returns the specified attribute value of an element node"],["getAttributeNode","Returns the specified attribute node"],["getBoundingClientRect","Returns the size of an element and its position relative to the viewport"],["getElementsByClassName","Returns a collection of all child elements with the specified class name"],["getElementsByTagName","Returns a collection of all child elements with the specified tag name"],["hasAttribute","Returns true if an element has the specified attribute, otherwise false"],["hasAttributes","Returns true if an element has any attributes, otherwise false"],["hasChildNodes","Returns true if an element has any child nodes, otherwise false"],["insertAdjacentElement","Inserts a HTML element at the specified position relative to the current element"],["insertAdjacentHTML","Inserts a HTML formatted text at the specified position relative to the current element"],["insertAdjacentText","Inserts text into the specified position relative to the current element"],["insertBefore","Inserts a new child node before a specified, existing, child node"],["isDefaultNamespace","Returns true if a specified namespaceURI is the default, otherwise false"],["isEqualNode","Checks if two elements are equal"],["isSameNode","Checks if two elements are the same node"],["isSupported","Returns true if a specified feature is supported on the element"],["matches","Returns a Boolean value indicating whether an element is matched by a specific CSS selector or not"],["normalize","Joins adjacent text nodes and removes empty text nodes in an element"],["querySelector","Returns the first child element that matches a specified CSS selector(s) of an element"],["querySelectorAll","Returns all child elements that matches a specified CSS selector(s) of an element"],["remove","Removes the element from the DOM"],["removeAttribute","Removes a specified attribute from an element"],["removeAttributeNode","Removes a specified attribute node, and returns the removed node"],["removeChild","Removes a child node from an element"],["removeEventListener","Removes an event handler that has been attached with the addEventListener() method"],["replaceChild","Replaces a child node in an element"],["requestFullscreen","Shows an element in fullscreen mode"],["scrollIntoView","Scrolls the specified element into the visible area of the browser window"],["setAttribute","Sets or changes the specified attribute, to the specified value"],["setAttributeNode","Sets or changes the specified attribute node"],["toString","Converts an element to a string"]]},
               events: {//https://www.w3schools.com/jsref/obj_events.asp
                    global: {
                         events: {"abort":[["UiEvent"," Event"],"The event occurs when the loading of a media is aborted"],"afterprint":[["Event"],"The event occurs when a page has started printing, or if the print dialogue box has been closed"],"animationend":[["AnimationEvent"],"The event occurs when a CSS animation has completed"],"animationiteration":[["AnimationEvent"],"The event occurs when a CSS animation is repeated"],"animationstart":[["AnimationEvent"],"The event occurs when a CSS animation has started"],"beforeprint":[["Event"],"The event occurs when a page is about to be printed"],"beforeunload":[["UiEvent"," Event"],"The event occurs before the document is about to be unloaded"],"blur":[["FocusEvent"],"The event occurs when an element loses focus"],"canplay":[["Event"],"The event occurs when the browser can start playing the media (when it has buffered \nenough to begin)"],"canplaythrough":[["Event"],"The event occurs when the browser can play through the media without \nstopping for buffering"],"change":[["Event"],"The event occurs when the content of a form element, the selection, or the checked state have changed (for <input>, <select>, and <textarea>)"],"click":[["MouseEvent"],"The event occurs when the user clicks on an element"],"contextmenu":[["MouseEvent"],"The event occurs when the user right-clicks on an element to open a context menu"],"copy":[["ClipboardEvent"],"The event occurs when the user copies the content of an element"],"cut":[["ClipboardEvent"],"The event occurs when the user cuts the content of an element"],"dblclick":[["MouseEvent"],"The event occurs when the user double-clicks on an element"],"drag":[["DragEvent"],"The event occurs when an element is being dragged"],"dragend":[["DragEvent"],"The event occurs when the user has finished dragging an element"],"dragenter":[["DragEvent"],"The event occurs when the dragged element enters the drop target"],"dragleave":[["DragEvent"],"The event occurs when the dragged element leaves the drop target"],"dragover":[["DragEvent"],"The event occurs when the dragged element is over the drop target"],"dragstart":[["DragEvent"],"The event occurs when the user starts to drag an element"],"drop":[["DragEvent"],"The event occurs when the dragged element is dropped on the drop target"],"durationchange":[["Event"],"The event occurs when the duration of the media is changed"],"ended":[["Event"],"The event occurs when the media has reach the end (useful for messages like \"thanks for listening\")"],"error":[["ProgressEvent"," UiEvent"," Event"],"The event occurs when an error occurs while loading an external file "],"focus":[["FocusEvent"],"The event occurs when an element gets focus"],"focusin":[["FocusEvent"],"The event occurs when an element is about to get focus"],"focusout":[["FocusEvent"],"The event occurs when an element is about to lose focus"],"fullscreenchange":[["Event"],"The event occurs when an element is displayed in fullscreen mode"],"fullscreenerror":[["Event"],"The event occurs when an element can not be displayed in fullscreen mode"],"hashchange":[["HashChangeEvent"],"The event occurs when there has been changes to the anchor part of a URL"],"input":[["InputEvent"," Event"],"The event occurs when an element gets user input"],"invalid":[["Event"],"The event occurs when an element is invalid"],"keydown":[["KeyboardEvent"],"The event occurs when the user is pressing a key"],"keypress":[["KeyboardEvent"],"The event occurs when the user presses a key"],"keyup":[["KeyboardEvent"],"The event occurs when the user releases a key"],"load":[["UiEvent"," Event"],"The event occurs when an object has loaded"],"loadeddata":[["Event"],"The event occurs when media data is loaded"],"loadedmetadata":[["Event"],"The event occurs when meta data (like dimensions and duration) are loaded"],"loadstart":[["ProgressEvent"],"The event occurs when the browser starts looking for the specified media"],"message":[["Event"],"The event occurs when a message is received through the event source"],"mousedown":[["MouseEvent"],"The event occurs when the user presses a mouse button over an element"],"mouseenter":[["MouseEvent"],"The event occurs when the pointer is moved onto an element"],"mouseleave":[["MouseEvent"],"The event occurs when the pointer is moved out of an element"],"mousemove":[["MouseEvent"],"The event occurs when the pointer is moving while it is over an element"],"mouseover":[["MouseEvent"],"The event occurs when the pointer is moved onto an element, or onto one of its children"],"mouseout":[["MouseEvent"],"The event occurs when a user moves the mouse pointer out of an element, or out of one of its children"],"mouseup":[["MouseEvent"],"The event occurs when a user releases a mouse button over an element"],"mousewheel":[["WheelEvent"],"Deprecated. Use the \n wheel event instead"],"offline":[["Event"],"The event occurs when the browser starts to work offline"],"online":[["Event"],"The event occurs when the browser starts to work online"],"open":[["Event"],"The event occurs when a connection with the event source is opened"],"pagehide":[["PageTransitionEvent"],"The event occurs when the user navigates away from a webpage"],"pageshow":[["PageTransitionEvent"],"The event occurs when the user navigates to a webpage"],"paste":[["ClipboardEvent"],"The event occurs when the user pastes some content in an element"],"pause":[["Event"],"The event occurs when the media is paused either by the user or \nprogrammatically"],"play":[["Event"],"The event occurs when the media has been started or is no longer paused"],"playing":[["Event"],"The event occurs when the media is playing after having been paused or stopped for buffering"],"popstate":[["PopStateEvent"],"The event occurs when the window's history changes"],"progress":[["Event"],"The event occurs when the browser is in the process of getting the media \ndata (downloading the media)"],"ratechange":[["Event"],"The event occurs when the playing speed of the media is changed"],"resize":[["UiEvent"," Event"],"The event occurs when the document view is resized"],"reset":[["Event"],"The event occurs when a form is reset"],"scroll":[["UiEvent"," Event"],"The event occurs when an element's scrollbar is being scrolled"],"search":[["Event"],"The event occurs when the user writes something in a search field (for <input=\"search\">)"],"seeked":[["Event"],"The event occurs when the user is finished moving/skipping to a new position \nin the media"],"seeking":[["Event"],"The event occurs when the user starts moving/skipping to a new position in \nthe media"],"select":[["UiEvent"," Event"],"The event occurs after the user selects some text (for <input> and <textarea>)"],"show":[["Event"],"The event occurs when a <menu> element is shown as a context menu"],"stalled":[["Event"],"The event occurs when the browser is trying to get media data, but data is not available"],"storage":[["StorageEvent"],"The event occurs when a Web Storage area is updated"],"submit":[["Event"],"The event occurs when a form is submitted"],"suspend":[["Event"],"The event occurs when the browser is intentionally not getting media data"],"timeupdate":[["Event"],"The event occurs when the playing position has changed (like when the user \nfast forwards to a different point in the media)"],"toggle":[["Event"],"The event occurs when the user opens or closes the <details> element"],"touchcancel":[["TouchEvent"],"The event occurs when the touch is interrupted"],"touchend":[["TouchEvent"],"The event occurs when a finger is removed from a touch screen"],"touchmove":[["TouchEvent"],"The event occurs when a finger is dragged across the screen"],"touchstart":[["TouchEvent"],"The event occurs when a finger is placed on a touch screen"],"transitionend":[["TransitionEvent"],"The event occurs when a CSS transition has completed"],"unload":[["UiEvent"," Event"],"The event occurs once a page has unloaded (for <body>)"],"volumechange":[["Event"],"The event occurs when the volume of the media has changed (includes setting the \nvolume to \"mute\")"],"waiting":[["Event"],"The event occurs when the media has paused but is expected to resume (like \nwhen the media pauses to buffer more data)"],"wheel":[["WheelEvent"],"The event occurs when the mouse wheel rolls up or down over an element"]},
                         properties: [["altKey","Returns whether the \"ALT\" key was pressed when the mouse event was triggered",["MouseEvent"]],["altKey","Returns whether the \"ALT\" key was pressed when the key event was triggered",["KeyboardEvent"," TouchEvent"]],["animationName","Returns the name of the animation",["AnimationEvent"]],["bubbles","Returns whether or not a specific event is a bubbling event",["Event"]],["button","Returns which mouse button was pressed when the mouse event was triggered",["MouseEvent"]],["buttons","Returns which mouse buttons were pressed when the mouse event was triggered",["MouseEvent"]],["cancelable","Returns whether or not an event can have its default action prevented",["Event"]],["charCode","Returns the Unicode character code of the key that triggered the onkeypress event",["KeyboardEvent"]],["changeTouches","Returns a list of all the touch objects whose state changed between the \n previous touch and this touch",["TouchEvent"]],["clientX","Returns the horizontal coordinate of the mouse pointer, relative to the current window, when the mouse event was triggered",["MouseEvent"," TouchEvent"]],["clientY","Returns the vertical coordinate of the mouse pointer, relative to the current window, when the mouse event was triggered",["MouseEvent"," TouchEvent"]],["clipboardData","Returns an object containing the data affected by the clipboard \n operation",["ClipboardData"]],["code","Returns the code of the key that triggered the event",["KeyboardEvent"]],["composed","Returns whether the event is composed or not ",["Event"]],["ctrlKey","Returns whether the \"CTRL\" key was pressed when the mouse event was triggered",["MouseEvent"]],["ctrlKey","Returns whether the \"CTRL\" key was pressed when the key event was triggered",["KeyboardEvent"," TouchEvent"]],["currentTarget","Returns the element whose event listeners triggered the event",["Event"]],["data","Returns the inserted characters",["InputEvent"]],["dataTransfer","Returns an object containing the data being dragged/dropped, or \n inserted/deleted",["DragEvent"," InputEvent"]],["defaultPrevented","Returns whether or not the preventDefault() method was called for the event",["Event"]],["deltaX","Returns the horizontal scroll amount of a mouse wheel (x-axis)",["WheelEvent"]],["deltaY","Returns the vertical scroll amount of a mouse wheel (y-axis)",["WheelEvent"]],["deltaZ","Returns the scroll amount of a mouse wheel for the z-axis",["WheelEvent"]],["deltaMode","Returns a number that represents the unit of measurements for delta values (pixels, lines or pages)",["WheelEvent"]],["detail","Returns a number that indicates how many times the mouse was clicked",["UiEvent"]],["elapsedTime","Returns the number of seconds an animation has been running",["AnimationEvent"]],["elapsedTime","Returns the number of seconds a transition has been running",[" "]],["eventPhase","Returns which phase of the event flow is currently being evaluated",["Event"]],["inputType","Returns the type of the change (i.e \"inserting\" or \"deleting\")",["InputEvent"]],["isComposing","Returns whether the state of the event is composing or not",["InputEvent"," KeyboardEvent"]],["isTrusted","Returns whether or not an event is trusted",["Event"]],["key","Returns the key value of the key represented by the event",["KeyboardEvent"]],["key","Returns the key of the changed storage item",["StorageEvent"]],["keyCode","Returns the Unicode character code of the key that triggered the onkeypress event, or the \nUnicode key code of the key that triggered the onkeydown or \nonkeyup event",["KeyboardEvent"]],["location","Returns the location of a key on the keyboard or device",["KeyboardEvent"]],["lengthComputable","Returns whether the length of the progress can be computable or not",["ProgressEvent"]],["loaded","Returns how much work has been loaded",["ProgressEvent"]],["metaKey","Returns whether the \"META\" key was pressed when an event was triggered",["MouseEvent"]],["metaKey","Returns whether the \"meta\" key was pressed when the key event was triggered",["KeyboardEvent"," TouchEvent"]],["MovementX","Returns the horizontal coordinate of the mouse pointer relative to the \nposition of the last mousemove event",["MouseEvent"]],["MovementY","Returns the vertical coordinate of the mouse pointer relative to the \nposition of the last mousemove event",["MouseEvent"]],["newValue","Returns the new value of the changed storage item",["StorageEvent"]],["newURL","Returns the URL of the document, after the hash has been changed",["HasChangeEvent"]],["offsetX","Returns the horizontal coordinate of the mouse pointer relative to the \nposition of the edge of the target element",["MouseEvent"]],["offsetY","Returns the vertical coordinate of the mouse pointer relative to the \nposition of the edge of the target element",["MouseEvent"]],["oldValue","Returns the old value of the changed storage item",["StorageEvent"]],["oldURL","Returns the URL of the document, before the hash was changed",["HasChangeEvent"]],["onemptied","The event occurs when something bad happens and the media file is suddenly \nunavailable (like unexpectedly disconnects)",[" "]],["pageX","Returns the horizontal coordinate of the mouse pointer, relative to the document, when the mouse event was triggered",["MouseEvent"]],["pageY","Returns the vertical coordinate of the mouse pointer, relative to the document, when the mouse event was triggered",["MouseEvent"]],["persisted","Returns whether the webpage was cached by the browser",["PageTransitionEvent"]],["propertyName","Returns the name of the CSS property associated with the animation or transition",["AnimationEvent"," TransitionEvent"]],["pseudoElement","Returns the name of the pseudo-element of the animation or transition",["AnimationEvent"," TransitionEvent"]],["region","",["MouseEvent"]],["relatedTarget","Returns the element related to the element that triggered the mouse event",["MouseEvent"]],["relatedTarget","Returns the element related to the element that triggered the event",["FocusEvent"]],["repeat","Returns whether a key is being hold down repeatedly, or not",["KeyboardEvent"]],["screenX","Returns the horizontal coordinate of the mouse pointer, relative to the screen, when an event was triggered",["MouseEvent"]],["screenY","Returns the vertical coordinate of the mouse pointer, relative to the screen, when an event was triggered",["MouseEvent"]],["shiftKey","Returns whether the \"SHIFT\" key was pressed when an event was triggered",["MouseEvent"]],["shiftKey","Returns whether the \"SHIFT\" key was pressed when the key event was triggered",["KeyboardEvent"," TouchEvent"]],["state","Returns an object containing a copy of the history entries",["PopStateEvent"]],["storageArea","Returns an object representing the affected storage object",["StorageEvent"]],["target","Returns the element that triggered the event",["Event"]],["targetTouches","Returns a list of all the touch objects that are in contact with the \n surface and where the touchstart event occured on the same target element as \n the current target element",["TouchEvent"]],["timeStamp","Returns the time (in milliseconds relative to the epoch) at which the event was created",["Event"]],["total","Returns the total amount of work that will be loaded",["ProgressEvent"]],["touches","Returns a list of all the touch objects that are currently in contact with \n the surface",["TouchEvent"]],["transitionend","The event occurs when a CSS transition has completed",["TransitionEvent"]],["type","Returns the name of the event",["Event"]],["url","Returns the URL of the changed item's document",["StorageEvent"]],["which","Returns which mouse button was pressed when the mouse event was triggered",["MouseEvent"]],["which","Returns the Unicode character code of the key that triggered the onkeypress event, or the \nUnicode key code of the key that triggered the onkeydown or \nonkeyup event",["KeyboardEvent"]],["view","Returns a reference to the Window object where the event occurred",["UiEvent"]]],
                         methods: [["createEvent","Creates a new event",["Event"]],["getTargetRanges","Returns an array containing target ranges that will be affected by the \n insertion/deletion",["InputEvent"]],["getModifierState","Returns an array containing target ranges that will be affected by the \n insertion/deletion",["MouseEvent"]],["preventDefault","Cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur",["Event"]],["stopImmediatePropagation","Prevents other listeners of the same event from being called",["Event"]],["stopPropagation","Prevents further propagation of an event during event flow",["Event"]]]
                    },
                    animation: {inherit: "event", properties: [["animationName", "Returns the name of the animation"], ["elapsedTime", "Returns the number of seconds an animation has been running"], ["pseudoElement", "Returns the name of the pseudo-element of the animation"]],
                              types: [["animationend", "The event occurs when a CSS animation has completed"], ["animationiteration", "The event occurs when a CSS animation is repeated"], ["animationstart", "The event occurs when a CSS animation has started"]]},
                    clipboard: {properties: [["clipboardData", "Returns an object containing the data affected by the clipboard operation"]],
                              types: [["oncopy", "The event occurs when a CSS animation has completed"], ["oncut", "The event occurs when the user cuts the content of an element"], ["onpaste", "The event occurs when the user pastes some content in an element"]]},
                    drag: {inherit: ["mouse"], properties: [["dataTransfer", "Returns the data that is dragged/dropped"]],
                              types: [["ondrag","The event occurs when an element is being dragged"],["ondragend","The event occurs when the user has finished dragging an element"],["ondragenter","The event occurs when the dragged element enters the drop target"],["ondragleave","The event occurs when the dragged element leaves the drop target"],["ondragover","The event occurs when the dragged element is over the drop target"],["ondragstart","The event occurs when the user starts to drag an element"],["ondrop","The event occurs when the dragged element is dropped on the drop target"]]},
                    event: {properties: [["bubbles","Returns whether or not a specific event is a bubbling event"],["cancelBubble","Sets or returns whether the event should propagate up the hierarchy or \n not"],["cancelable","Returns whether or not an event can have its default action prevented"],["composed","Returns whether the event is composed or not"],["createEvent()","Creates a new event"],["composedPath()","Returns the event's path"],["currentTarget","Returns the element whose event listeners triggered the event"],["defaultPrevented","Returns whether or not the preventDefault() method was called for the event"],["eventPhase","Returns which phase of the event flow is currently being evaluated"],["isTrusted","Returns whether or not an event is trusted"],["preventDefault()","Cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur"],["stopImmediatePropagation()","Prevents other listeners of the same event from being called"],["stopPropagation()","Prevents further propagation of an event during event flow"],["target","Returns the element that triggered the event"],["timeStamp","Returns the time (in milliseconds relative to the epoch) at which the event was created"],["type","Returns the name of the event"]],
                              types: [["abort","The event occurs when the loading of a media is aborted"],["afterprint","The event occurs when a page has started printing"],["beforeprint","The event occurs when a page is about to be printed"],["beforeunload","The event occurs before the document is about to be unloaded"],["canplay","The event occurs when the browser can start playing the media (when it has buffered \nenough to begin)"],["canplaythrough","The event occurs when the browser can play through the media without \nstopping for buffering"],["change","The event occurs when the content of a form element, the selection, or the checked state have changed (for <input>, <select>, and <textarea>)"],["error","The event occurs when an error occurs while loading an external file "],["fullscreenchange","The event occurs when an element is displayed in fullscreen mode"],["fullscreenerror","The event occurs when an element can not be displayed in fullscreen mode"],["input","The event occurs when an element gets user input"],["invalid","The event occurs when an element is invalid"],["load","The event occurs when an object has loaded"],["loadeddata","The event occurs when media data is loaded"],["loadedmetadata","The event occurs when meta data (like dimensions and duration) are loaded"],["message","The event occurs when a message is received through the event source"],["offline","The event occurs when the browser starts to work offline"],["online","The event occurs when the browser starts to work online"],["open","The event occurs when a connection with the event source is opened"],["pause","The event occurs when the media is paused either by the user or \nprogrammatically"],["play","The event occurs when the media has been started or is no longer paused"],["playing","The event occurs when the media is playing after having been paused or stopped for buffering"],["progress","The event occurs when the browser is in the process of getting the media \ndata (downloading the media)"],["ratechange","The event occurs when the playing speed of the media is changed"],["resize","The event occurs when the document view is resized"],["reset","The event occurs when a form is reset"],["scroll","The event occurs when an element's scrollbar is being scrolled"],["search","The event occurs when the user writes something in a search field (for <input=\"search\">)"],["seeked","The event occurs when the user is finished moving/skipping to a new position \nin the media"],["seeking","The event occurs when the user starts moving/skipping to a new position in \nthe media"],["select","The event occurs after the user selects some text (for <input> and <textarea>)"],["show","The event occurs when a <menu> element is shown as a context menu"],["stalled","The event occurs when the browser is trying to get media data, but data is not available"],["submit","The event occurs when a form is submitted"],["suspend","The event occurs when the browser is intentionally not getting media data"],["timeupdate","The event occurs when the playing position has changed (like when the user \nfast forwards to a different point in the media)"],["toggle","The event occurs when the user opens or closes the <details> element"],["unload","The event occurs once a page has unloaded (for <body>)"],["waiting","The event occurs when the media has paused but is expected to resume (like \nwhen the media pauses to buffer more data)"]]},
                    focus: {inherit: ["ui"], properties: [["relatedTarget","Returns the element related to the element that triggered the event"]],
                              types: [["onblur","The event occurs when an element loses focus"],["onfocus","The event occurs when an element gets focus"],["onfocusin","The event occurs when an element is about to get focus"],["onfocusout","The event occurs when an element is about to lose focus"]]},
                    hashChange: {properties: [["newURL", "Returns the URL of the document, after the hash has been changed"], ["oldURL","Returns the URL of the document, before the hash was changed"]],
                              types: [["onhashchange","The event occurs when there has been changes to the anchor part of a URL"]]},
                    input: {inherit: ["ui"], properties: [["data","Returns the inserted characters"],["dataTransfer","Returns an object containing information about the inserted/deleted data"],["getTargetRanges()","Returns an array containing target ranges that will be affected by the insertion/deletion"],["inputType","Returns the type of the change (i.e \"inserting\" or \"deleting\")"],["isComposing","Returns whether the state of the event is composing or not"]],
                              types: [["oninput","The event occurs when an element gets user input"]]},
                    keyboard: {inherit: ["ui"], properties: [["altKey","Returns whether the \"ALT\" key was pressed when the key event was triggered"],["charCode","Returns the Unicode character code of the key that triggered the event"],["code","Returns the code of the key that triggered the event"],["ctrlKey","Returns whether the \"CTRL\" key was pressed when the key event was triggered"],["getModifierState()","Returns true if the specified key is activated"],["isComposing","Returns whether the state of the event is composing or not"],["key","Returns the key value of the key represented by the event"],["keyCode","Returns the Unicode character code of the key that triggered the onkeypress event, or the \nUnicode key code of the key that triggered the onkeydown or \nonkeyup event"],["location","Returns the location of a key on the keyboard or device"],["metaKey","Returns whether the \"meta\" key was pressed when the key event was triggered"],["repeat","Returns whether a key is being hold down repeatedly, or not"],["shiftKey","Returns whether the \"SHIFT\" key was pressed when the key event was triggered"],["which","Returns the Unicode character code of the key that triggered the onkeypress event, or the \nUnicode key code of the key that triggered the onkeydown or \nonkeyup event"]],
                              types: [["onkeydown","The event occurs when the user is pressing a key"],["onkeypress","The event occurs when the user presses a key"],["onkeyup","The event occurs when the user releases a key"]]},
                    mouse: {inherit: ["ui"], properties: [["altKey","Returns whether the \"ALT\" key was pressed when the mouse event was triggered"],["button","Returns which mouse button was pressed when the mouse event was triggered"],["buttons","Returns which mouse buttons were pressed when the mouse event was triggered"],["clientX","Returns the horizontal coordinate of the mouse pointer, relative to the current window, when the mouse event was triggered"],["clientY","Returns the vertical coordinate of the mouse pointer, relative to the current window, when the mouse event was triggered"],["ctrlKey","Returns whether the \"CTRL\" key was pressed when the mouse event was triggered"],["getModifierState()","Returns true if the specified key is activated"],["metaKey","Returns whether the \"META\" key was pressed when an event was triggered"],["movementX","Returns the horizontal coordinate of the mouse pointer relative to the \n position of the last mousemove event"],["movementY","Returns the vertical coordinate of the mouse pointer relative to the \n position of the last mousemove event"],["offsetX","Returns the horizontal coordinate of the mouse pointer relative to the \n position of the edge of the target element"],["offsetY","Returns the vertical coordinate of the mouse pointer relative to the \n position of the edge of the target element"],["pageX","Returns the horizontal coordinate of the mouse pointer, relative to the document, when the mouse event was triggered"],["pageY","Returns the vertical coordinate of the mouse pointer, relative to the document, when the mouse event was triggered"],["region"," "],["relatedTarget","Returns the element related to the element that triggered the mouse event"],["screenX","Returns the horizontal coordinate of the mouse pointer, relative to the screen, when an event was triggered"],["screenY","Returns the vertical coordinate of the mouse pointer, relative to the screen, when an event was triggered"],["shiftKey","Returns whether the \"SHIFT\" key was pressed when an event was triggered"],["which","Returns which mouse button was pressed when the mouse event was triggered"]],
                              types: [["onclick","The event occurs when the user clicks on an element"],["oncontextmenu","The event occurs when the user right-clicks on an element to open a context menu"],["ondblclick","The event occurs when the user double-clicks on an element"],["onmousedown","The event occurs when the user presses a mouse button over an element"],["onmouseenter","The event occurs when the pointer is moved onto an element"],["onmouseleave","The event occurs when the pointer is moved out of an element"],["onmousemove","The event occurs when the pointer is moving while it is over an element"],["onmouseout","The event occurs when a user moves the mouse pointer out of an element, or out of one of its children"],["onmouseover","The event occurs when the pointer is moved onto an element, or onto one of its children"],["onmouseup","The event occurs when a user releases a mouse button over an element"]]},
                    pageTransition: {properties: [["persisted","Returns whether the webpage was cached by the browser"]],
                              types: [["pagehide","The event occurs when the user navigates away from a webpage"],["pageshow","The event occurs when the user navigates to a webpage"]]},
                    popState: {properties: [["state","Returns an object containing a copy of the history entries"]],
                              types: [["popstate","The event occurs when the window's history changes"]]},
                    progress: {properties: [["lengthComputable","Returns whether the length of the progress can be computable or not"],["loaded","Returns how much work has been loaded"],["total","Returns the total amount of work that will be loaded"]],
                              types: [["onerror","The event occurs when an error occurs while loading an external file"], ["onloadstart","The event occurs when the browser starts looking for the specified media"]]},
                    storage: {properties: [["key","Returns the key of the changed storage item"],["newValue","Returns the new value of the changed storage item"],["oldValue","Returns the old value of the changed storage item"],["storageArea","Returns an object representing the affected storage object"],["url","Returns the URL of the changed item's document"]],
                              types: [["storage","The event occurs when a Web Storage area is updated"]]},
                    touch: {inherit: ["ui"], properties: [["altKey","Returns whether the \"ALT\" key was pressed when the touch event was triggered"],["changedTouches","Returns a list of all the touch objects whose state changed between the previous touch and this touch"],["ctrlKey","Returns whether the \"CTRL\" key was pressed when the touch event was triggered"],["metaKey","Returns whether the \"meta\" key was pressed when the touch event was triggered"],["shiftKey","Returns whether the \"SHIFT\" key was pressed when the touch event was triggered"],["targetTouches","Returns a list of all the touch objects that are in contact with the surface and where the touchstart event occured on the same target element as the current target element"],["touches","Returns a list of all the touch objects that are currently in contact with the surface"]],
                              types: [["ontouchcancel","The event occurs when the touch is interrupted"],["ontouchend","The event occurs when a finger is removed from a touch screen"],["ontouchmove","The event occurs when a finger is dragged across the screen"],["ontouchstart","The event occurs when a finger is placed on a touch screen"]]},
                    transition: {properties: [["propertyName","Returns the name of the transition"],["elapsedTime","Returns the number of seconds a transition has been running"],["pseudoElement","Returns the name of the pseudo-element of the transition"]],
                              types: [["transitionend","The event occurs when a CSS transition has completed"]]},
                    ui: {properties: [["detail","Returns a number with details about the event"],["view","Returns a reference to the Window object where the event occurred"]],
                              types: [["abort","The event occurs when the loading of a media is aborted"],["beforeunload","The event occurs before the document is about to be unloaded"],["error","The event occurs when an error occurred during the loading of a media file"],["load","The event occurs when an object has loaded"],["resize","The event occurs when the document view is resized"],["scroll","The event occurs when an element's scrollbar is being scrolled"],["select","The event occurs after the user selects some text (for <input> and <textarea>)"],["unload","The event occurs once a page has unloaded (for <body>)"]]},
                    wheel: {properties: [["deltaX","Returns the horizontal scroll amount of a mouse wheel (x-axis)"],["deltaY","Returns the vertical scroll amount of a mouse wheel (y-axis)"],["deltaZ","Returns the scroll amount of a mouse wheel for the z-axis"],["deltaMode","Returns a number that represents the unit of measurements for delta values (pixels, lines or pages)"]],
                              types: [["onwheel","The event occurs when the mouse wheel rolls up or down over an element"]]},
               },
               htmlcollection: {
                    properties: ["length"],
                    methods: [["item", "Returns the element at the specified index in an HTMLCollection"], ["namedItem", "Returns the element with the specified ID, or name, in an HTMLCollection"]]
               },
               location: {
                    properties: [["hash","Sets or returns the anchor part (#) of a URL"],["host","Sets or returns the hostname and port number of a URL"],["hostname","Sets or returns the hostname of a URL"],["href","Sets or returns the entire URL"],["origin","Returns the protocol, hostname and port number of a URL"],["pathname","Sets or returns the path name of a URL"],["port","Sets or returns the port number of a URL"],["protocol","Sets or returns the protocol of a URL"],["search","Sets or returns the querystring part of a URL"]],
                    methods: [["assign","Loads a new document"],["reload","Reloads the current document"],["replace","Replaces the current document with a new one"]]
               },
               navigator: {
                    properties: [["appCodeName","Returns the code name of the browser"],["appName","Returns the name of the browser"],["appVersion","Returns the version information of the browser"],["cookieEnabled","Determines whether cookies are enabled in the browser"],["geolocation","Returns a Geolocation object that can be used to locate the user's position"],["language","Returns the language of the browser"],["onLine","Determines whether the browser is online"],["platform","Returns for which platform the browser is compiled"],["product","Returns the engine name of the browser"],["userAgent","Returns the user-agent header sent by the browser to \n the server"]],
                    methods: [["javaEnabled", "Specifies whether or not the browser has Java enabled"]]
               },
               screen: {
                    properties: [["availHeight","Returns the height of the screen (excluding the Windows Taskbar)"],["availWidth","Returns the width of the screen (excluding the Windows Taskbar)"],["colorDepth","Returns the bit depth of the color palette for displaying images"],["height","Returns the total height of the screen"],["pixelDepth","Returns the color resolution (in bits per pixel) of the screen"],["width","Returns the total width of the screen"]],
                    methods: []
               },
               style: {
                    properties: [["alignContent","Sets or returns the alignment between the lines inside a flexible container when the items do not use all available space","3"],["alignItems","Sets or returns the alignment for items inside a flexible container","3"],["alignSelf","Sets or returns the alignment for selected items inside a flexible container","3"],["animation","A shorthand property for all the animation properties below, except the animationPlayState property","3"],["animationDelay","Sets or returns when the animation will start","3"],["animationDirection","Sets or returns whether or not the animation should play in reverse on alternate cycles","3"],["animationDuration","Sets or returns how many seconds or milliseconds an animation takes to complete one cycle","3"],["animationFillMode","Sets or returns what values are applied by the animation outside the time it is executing","3"],["animationIterationCount","Sets or returns the number of times an animation should be played","3"],["animationName","Sets or returns a name for the @keyframes animation","3"],["animationTimingFunction","Sets or returns the speed curve of the animation","3"],["animationPlayState","Sets or returns whether the animation is running or paused","3"],["background","Sets or returns all the background properties in one declaration","1"],["backgroundAttachment","Sets or returns whether a background-image is fixed or scrolls with the page","1"],["backgroundColor","Sets or returns the background-color of an element","1"],["backgroundImage","Sets or returns the background-image for an element","1"],["backgroundPosition","Sets or returns the starting position of a background-image","1"],["backgroundRepeat","Sets or returns how to repeat (tile) a background-image","1"],["backgroundClip","Sets or returns the painting area of the background","3"],["backgroundOrigin","Sets or returns the positioning area of the background images","3"],["backgroundSize","Sets or returns the size of the background image","3"],["backfaceVisibility","Sets or returns whether or not an element should be visible when not facing the screen","3"],["border","Sets or returns borderWidth, borderStyle, and borderColor in one declaration","1"],["borderBottom","Sets or returns all the borderBottom properties in one declaration","1"],["borderBottomColor","Sets or returns the color of the bottom border","1 "],["borderBottomLeftRadius","Sets or returns the shape of the border of the bottom-left corner","3"],["borderBottomRightRadius","Sets or returns the shape of the border of the bottom-right corner","3"],["borderBottomStyle","Sets or returns the style of the bottom border","1"],["borderBottomWidth","Sets or returns the width of the bottom border","1"],["borderCollapse","Sets or returns whether the table border should be collapsed into a single border, or not","2"],["borderColor","Sets or returns the color of an element's border (can have up to four values)","1"],["borderImage","A shorthand property for setting or returning all the borderImage properties","3"],["borderImageOutset","Sets or returns the amount by which the border image area extends beyond the border box","3"],["borderImageRepeat","Sets or returns whether the image-border should be repeated, rounded or stretched","3"],["borderImageSlice","Sets or returns the inward offsets of the image-border","3"],["borderImageSource","Sets or returns the image to be used as a border","3"],["borderImageWidth","Sets or returns the widths of the image-border","3"],["borderLeft","Sets or returns all the borderLeft properties in one declaration","1"],["borderLeftColor","Sets or returns the color of the left border","1"],["borderLeftStyle","Sets or returns the style of the left border","1"],["borderLeftWidth","Sets or returns the width of the left border","1"],["borderRadius","A shorthand property for setting or returning all the four borderRadius properties","3"],["borderRight","Sets or returns all the borderRight properties in one declaration","1"],["borderRightColor","Sets or returns the color of the right border","1"],["borderRightStyle","Sets or returns the style of the right border","1"],["borderRightWidth","Sets or returns the width of the right border","1"],["borderSpacing","Sets or returns the space between cells in a table","2"],["borderStyle","Sets or returns the style of an element's border (can have up to four values)","1"],["borderTop","Sets or returns all the borderTop properties in one declaration","1"],["borderTopColor","Sets or returns the color of the top border","1"],["borderTopLeftRadius","Sets or returns the shape of the border of the top-left corner","3"],["borderTopRightRadius","Sets or returns the shape of the border of the top-right corner","3"],["borderTopStyle","Sets or returns the style of the top border","1"],["borderTopWidth","Sets or returns the width of the top border","1"],["borderWidth","Sets or returns the width of an element's border (can have up to four values)","1"],["bottom","Sets or returns the bottom position of a positioned element","2"],["boxDecorationBreak","Sets or returns the behaviour of the background and border of an element at page-break, or, for in-line elements, at line-break.","3"],["boxShadow","Attaches one or more drop-shadows to the box","3"],["boxSizing","Allows you to define certain elements to fit an area in a certain way","3"],["captionSide","Sets or returns the position of the table caption","2"],["caretColor","Sets or returns the caret/cursor color of an element","3"],["clear","Sets or returns the position of the element relative to floating objects","1"],["clip","Sets or returns which part of a positioned element is visible","2"],["color","Sets or returns the color of the text","1"],["columnCount","Sets or returns the number of columns an element should be divided into","3"],["columnFill","Sets or returns how to fill columns","3"],["columnGap","Sets or returns the gap between the columns","3"],["columnRule","A shorthand property for setting or returning all the columnRule properties","3"],["columnRuleColor","Sets or returns the color of the rule between columns","3"],["columnRuleStyle","Sets or returns the style of the rule between columns","3"],["columnRuleWidth","Sets or returns the width of the rule between columns","3"],["columns","A shorthand property for setting or returning columnWidth and columnCount","3"],["columnSpan","Sets or returns how many columns an element should span across","3"],["columnWidth","Sets or returns the width of the columns","3"],["content","Used with the :before and :after pseudo-elements, to insert generated content","2"],["counterIncrement","Increments one or more counters","2"],["counterReset","Creates or resets one or more counters","2"],["cursor","Sets or returns the type of cursor to display for the mouse pointer","2"],["direction","Sets or returns the text direction","2"],["display","Sets or returns an element's display type","1"],["emptyCells","Sets or returns whether to show the border and background of empty cells, or not","2"],["filter","Sets or returns image filters (visual effects, like blur and saturation)","3"],["flex","Sets or returns the length of the item, relative to the rest","3"],["flexBasis","Sets or returns the initial length of a flexible item","3"],["flexDirection","Sets or returns the direction of the flexible items","3"],["flexFlow","A shorthand property for the flexDirection and the flexWrap properties","3"],["flexGrow","Sets or returns how much the item will grow relative to the rest","3"],["flexShrink","Sets or returns how the item will shrink relative to the rest","3"],["flexWrap","Sets or returns whether the flexible items should wrap or not","3"],["cssFloat","Sets or returns the horizontal alignment of an element","1"],["font","Sets or returns fontStyle, fontVariant, fontWeight, fontSize, lineHeight, and fontFamily in one declaration","1"],["fontFamily","Sets or returns the font family for text","1"],["fontSize","Sets or returns the font size of the text","1"],["fontStyle","Sets or returns whether the style of the font is normal, italic or oblique","1"],["fontVariant","Sets or returns whether the font should be displayed in small capital letters","1"],["fontWeight","Sets or returns the boldness of the font","1"],["fontSizeAdjust","Preserves the readability of text when font fallback occurs","3"],["fontStretch","Selects a normal, condensed, or expanded face from a font family","3"],["hangingPunctuation","Specifies whether a punctuation character may be placed outside the line box","3"],["height","Sets or returns the height of an element","1"],["hyphens","Sets how to split words to improve the layout of paragraphs","3"],["icon","Provides the author the ability to style an element with an iconic equivalent","3"],["imageOrientation","Specifies a rotation in the right or clockwise direction that a user agent applies to an image","3"],["isolation","Defines whether an element must create a new stacking content","3"],["justifyContent","Sets or returns the alignment between the items inside a flexible container when the items do not use all available space.","3"],["left","Sets or returns the left position of a positioned element","2"],["letterSpacing","Sets or returns the space between characters in a text","1"],["lineHeight","Sets or returns the distance between lines in a text","1"],["listStyle","Sets or returns listStyleImage, listStylePosition, and listStyleType in one declaration","1"],["listStyleImage","Sets or returns an image as the list-item marker","1"],["listStylePosition","Sets or returns the position of the list-item marker","1"],["listStyleType","Sets or returns the list-item marker type","1"],["margin","Sets or returns the margins of an element (can have up to four values)","1"],["marginBottom","Sets or returns the bottom margin of an element","1"],["marginLeft","Sets or returns the left margin of an element","1"],["marginRight","Sets or returns the right margin of an element","1"], 
                    ["marginTop","Sets or returns the top margin of an element","1"],["maxHeight","Sets or returns the maximum height of an element","2"],["maxWidth","Sets or returns the maximum width of an element","2"],["minHeight","Sets or returns the minimum height of an element","2"],["minWidth","Sets or returns the minimum width of an element","2"],["navDown","Sets or returns where to navigate when using the arrow-down navigation key","3"],["navIndex","Sets or returns the tabbing order for an element","3"],["navLeft","Sets or returns where to navigate when using the arrow-left navigation key","3"],["navRight","Sets or returns where to navigate when using the arrow-right navigation key","3"],["navUp","Sets or returns where to navigate when using the arrow-up navigation key","3"],["objectFit","\tSpecifies how the contents of a replaced element should be fitted to the box established by its used height and width","3"],["objectPosition","Specifies the alignment of the replaced element inside its box","3"],["opacity","Sets or returns the opacity level for an element","3"],["order","Sets or returns the order of the flexible item, relative to the rest","3"],["orphans","Sets or returns the minimum number of lines for an element that must be left at the bottom of a page when a page break occurs inside an element","2"],["outline","Sets or returns all the outline properties in one declaration","2"],["outlineColor","Sets or returns the color of the outline around a element","2"],["outlineOffset","Offsets an outline, and draws it beyond the border edge","3"],["outlineStyle","Sets or returns the style of the outline around an element","2"],["outlineWidth","Sets or returns the width of the outline around an element","2"],["overflow","Sets or returns what to do with content that renders outside the element box","2"],["overflowX","Specifies what to do with the left/right edges of the content, if it overflows the element's content area","3"],["overflowY","Specifies what to do with the top/bottom edges of the content, if it overflows the element's content area","3"],["padding","Sets or returns the padding of an element (can have up to four values)","1"],["paddingBottom","Sets or returns the bottom padding of an element","1"],["paddingLeft","Sets or returns the left padding of an element","1"],["paddingRight","Sets or returns the right padding of an element","1"],["paddingTop","Sets or returns the top padding of an element","1"],["pageBreakAfter","Sets or returns the page-break behavior after an element","2"],["pageBreakBefore","Sets or returns the page-break behavior before an element","2"],["pageBreakInside","Sets or returns the page-break behavior inside an element","2"],["perspective","Sets or returns the perspective on how 3D elements are viewed","3"],["perspectiveOrigin","Sets or returns the bottom position of 3D elements","3"],["position","Sets or returns the type of positioning method used for an element (static, relative, absolute or fixed)","2"],["quotes","Sets or returns the type of quotation marks for embedded quotations","2"],["resize","Sets or returns whether or not an element is resizable by the user","3"],["right","Sets or returns the right position of a positioned element","2"],["scrollBehavior","Specifies whether to smoothly animate the scroll position, instead of a straight jump, when the user clicks on a link within a scrollable boxt",""],["tableLayout","Sets or returns the way to lay out table cells, rows, and columns","2"],["tabSize","Sets or returns the length of the tab-character","3"],["textAlign","Sets or returns the horizontal alignment of text","1"],["textAlignLast","Sets or returns how the last line of a block or a line right before a forced line break is aligned when text-align is \"justify\"","3"],["textDecoration","Sets or returns the decoration of a text","1"],["textDecorationColor","Sets or returns the color of the text-decoration","3"],["textDecorationLine","Sets or returns the type of line in a text-decoration","3"],["textDecorationStyle","Sets or returns the style of the line in a text decoration","3"],["textIndent","Sets or returns the indentation of the first line of text","1"],["textJustify","Sets or returns the justification method used when text-align is \"justify\"","3"],["textOverflow","Sets or returns what should happen when text overflows the containing element","3"],["textShadow","Sets or returns the shadow effect of a text","3"],["textTransform","Sets or returns the capitalization of a text","1"],["top","Sets or returns the top position of a positioned element","2"],["transform","Applies a 2D or 3D transformation to an element","3"],["transformOrigin","Sets or returns the position of transformed elements","3"],["transformStyle","Sets or returns how nested elements are rendered in 3D space","3"],["transition","A shorthand property for setting or returning the four transition properties","3"],["transitionProperty","Sets or returns the CSS property that the transition effect is for","3"],["transitionDuration","Sets or returns how many seconds or milliseconds a transition effect takes to complete","3"],["transitionTimingFunction","Sets or returns the speed curve of the transition effect","3"],["transitionDelay","Sets or returns when the transition effect will start","3"],["unicodeBidi","Sets or returns whether the text should be overridden to support multiple languages in the same document","2"],["userSelect","Sets or returns whether the text of an element can be selected or not","2"],["verticalAlign","Sets or returns the vertical alignment of the content in an element","1"],["visibility","Sets or returns whether an element should be visible","2"],["whiteSpace","Sets or returns how to handle tabs, line breaks and whitespace in a text","1"],["width","Sets or returns the width of an element","1"],["wordBreak","Sets or returns line breaking rules for non-CJK scripts","3"],["wordSpacing","Sets or returns the spacing between words in a text","1"],["wordWrap","Allows long, unbreakable words to be broken and wrap to the next line","3"],["widows","Sets or returns the minimum number of lines for an element that must be visible at the top of a page","2"],["zIndex","Sets or returns the stack order of a positioned element","2"]],
                    methods: []
               },
               window: {
                    properties: [["closed","Returns a Boolean value indicating whether a window has been closed or not"],["console","Returns a reference to the Console object, which provides methods for logging information to the browser's console (See Console object)"],["defaultStatus","Sets or returns the default text in the statusbar of a window"],["document","Returns the Document object for the window (See Document object)"],["frameElement","Returns the <iframe> element in which the current window is inserted"],["frames","Returns all <iframe> elements in the current window"],["history","Returns the History object for the window (See History object)"],["innerHeight","Returns the height of the window's content area (viewport) including \n scrollbars"],["innerWidth","Returns the width of a window's content area (viewport) including \n scrollbars"],["length","Returns the number of <iframe> elements in the current window"],["localStorage","Allows to save key/value pairs in a web browser. Stores the data with no expiration date"],["location","Returns the Location object for the window (See Location object)"],["name","Sets or returns the name of a window"],["navigator","Returns the Navigator object for the window (See Navigator object)"],["opener","Returns a reference to the window that created the window"],["outerHeight","Returns the height of the browser window, including toolbars/scrollbars"],["outerWidth","Returns the width of the browser window, including toolbars/scrollbars"],["pageXOffset","Returns the pixels the current document has been scrolled (horizontally) from the upper left corner of the window"],["pageYOffset","Returns the pixels the current document has been scrolled (vertically) from the upper left corner of the window"],["parent","Returns the parent window of the current window"],["screen","Returns the Screen object for the window (See Screen object)"],["screenLeft","Returns the horizontal coordinate of the window relative to the screen"],["screenTop","Returns the vertical coordinate of the window relative to the screen"],["screenX","Returns the horizontal coordinate of the window relative to the screen"],["screenY","Returns the vertical coordinate of the window relative to the screen"],["sessionStorage","Allows to save key/value pairs in a web browser. Stores the data for one \n session"],["scrollX","An alias of pageXOffset"],["scrollY","An alias of pageYOffset"],["self","Returns the current window"],["status","Sets or returns the text in the statusbar of a window"],["top","Returns the topmost browser window"]],
                    methods: [["alert()","Displays an alert box with a message and an OK button"],["atob()","Decodes a base-64 encoded string"],["blur()","Removes focus from the current window"],["btoa()","Encodes a string in base-64"],["clearInterval()","Clears a timer set with setInterval()"],["clearTimeout()","Clears a timer set with setTimeout()"],["close()","Closes the current window"],["confirm()","Displays a dialog box with a message and an OK and a Cancel button"],["focus()","Sets focus to the current window"],["getComputedStyle()","Gets the current computed CSS styles applied to an element"],["getSelection()","Returns a Selection object representing the range of text selected by the user"],["matchMedia()","Returns a MediaQueryList object representing the specified CSS media query string"],["moveBy()","Moves a window relative to its current position"],["moveTo()","Moves a window to the specified position"],["open()","Opens a new browser window"],["print()","Prints the content of the current window"],["prompt()","Displays a dialog box that prompts the visitor for input"],["requestAnimationFrame()","Requests the browser to call a function to update an animation before \n the next repaint"],["resizeBy()","Resizes the window by the specified pixels"],["resizeTo()","Resizes the window to the specified width and height"],["scroll()","Deprecated. This method has been replaced by the scrollTo() method."],["scrollBy()","Scrolls the document by the specified number of pixels"],["scrollTo()","Scrolls the document to the specified coordinates"],["setInterval()","Calls a function or evaluates an expression at specified intervals (in milliseconds)"],["setTimeout()","Calls a function or evaluates an expression after a specified number of milliseconds"],["stop()","Stops the window from loading"]]
               }
          }
          // https://jaetheme.com/balises-html5/
          this.HTML5Tags = ["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdo","bdi","big","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","datalist","dd","del","details","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1 Ã  h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","keygen","kbd","label","legend","li","link","main","map","mark","menu","meta","meter","nav","noframes","noscript","object","ol","optgroup","option","output","p","param","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strike","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"]
          // https://www.w3schools.com/tags/ref_attributes.asp
          this.HTMLAttributes = {"input":["accept","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","height","list","max","maxlength","min","multiple","name","onload","onsearch","pattern","placeholder","readonly","required","size","src","step","type","value","width"],"form":["accept-charset","action","autocomplete","enctype","method","name","novalidate","onreset","onsubmit","target"],"Global Attributes":["accesskey","class","contenteditable","data-*","dir","draggable","hidden","id","lang","spellcheck","style","tabindex","title","translate"],"Not supported in HTML 5.":["align","bgcolor","border","color"],"area":["alt","coords","download","href","hreflang","media","rel","shape","target"],"img":["alt","height","ismap","onabort","onerror","onload","sizes","src","srcset","usemap","width"],"script":["async","charset","defer","onerror","onload","src","type"],"button":["autofocus","disabled","form","formaction","name","type","value"],"select":["autofocus","disabled","form","multiple","name","required","size"],"textarea":["autofocus","cols","dirname","form","maxlength","name","placeholder","readonly","required","rows","wrap"],"audio":["autoplay","controls","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","preload","src"],"video":["autoplay","controls","height","loop","muted","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onerror","onloadeddata","onloadedmetadata","onloadstart","onpause","onplay","onplaying","onprogress","onratechange","onseeked","onseeking","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","poster","preload","width"],"meta":["charset","content","http-equiv","name"],"blockquote":["cite"],"del":["cite","datetime"],"ins":["cite","datetime"],"q":["cite"],"td":["colspan","headers","rowspan"],"th":["colspan","headers","rowspan","scope"],"object":["data","form","height","onabort","oncanplay","onerror","type","usemap","width"],"time":["datetime"],"track":["default","kind","label","oncuechange","src","srclang"],"fieldset":["disabled","form","name"],"optgroup":["disabled","label"],"option":["disabled","label","selected","value"],"textarea":["disabled"],"a":["download","href","hreflang","media","rel","target","type"],"label":["for","form"],"output":["for","name"],"meter":["form","high","low","max","min","optimum"],"output":["form"],"canvas":["height","width"],"embed":["height","onabort","oncanplay","onerror","src","type","width"],"iframe":["height","name","onload","sandbox","src","srcdoc","width"],"base":["href","target"],"link":["href","hreflang","media","onload","rel","type"],"progress":["max","value"],"source":["media","src","srcset"],"style":["media","onerror","onload","type"],"map":["name"],"object":["name"],"param":["name","value"],"body":["onafterprint","onbeforeprint","onbeforeunload","onerror","onhashchange","onload","onoffline","ononline","onpagehide","onpageshow","onpopstate","onresize","onstorage","onunload"],"All visible elements.":["onblur","onchange","onclick","oncontextmenu","oncopy","oncut","ondblclick","ondrag","ondragend","ondragenter","ondragleave","ondragover","ondragstart","ondrop","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onmousedown","onmousemove","onmouseout","onmouseover","onmouseup","onmousewheel","onpaste","onscroll","onselect","onwheel"],"details":["ontoggle","open"],"form":["rel"],"ol":["reversed","start"],"link,source":["sizes"],"col":["span"],"colgroup":["span"],"video":["src"],"menu":["type"],"source":["type"],"li":["value"],"meter":["value"]}
          
          this.ACSIIEncodings = {"0":{"win1252":"%30","utf8":"%30"},"1":{"win1252":"%31","utf8":"%31"},"2":{"win1252":"%32","utf8":"%32"},"3":{"win1252":"%33","utf8":"%33"},"4":{"win1252":"%34","utf8":"%34"},"5":{"win1252":"%35","utf8":"%35"},"6":{"win1252":"%36","utf8":"%36"},"7":{"win1252":"%37","utf8":"%37"},"8":{"win1252":"%38","utf8":"%38"},"9":{"win1252":"%39","utf8":"%39"},"space":{"win1252":"%20","utf8":"%20"},"!":{"win1252":"%21","utf8":"%21"},"\"":{"win1252":"%22","utf8":"%22"},"#":{"win1252":"%23","utf8":"%23"},"$":{"win1252":"%24","utf8":"%24"},"%":{"win1252":"%25","utf8":"%25"},"&":{"win1252":"%26","utf8":"%26"},"'":{"win1252":"%27","utf8":"%27"},"(":{"win1252":"%28","utf8":"%28"},")":{"win1252":"%29","utf8":"%29"},"*":{"win1252":"%2A","utf8":"%2A"},"+":{"win1252":"%2B","utf8":"%2B"},",":{"win1252":"%2C","utf8":"%2C"},"-":{"win1252":"%2D","utf8":"%2D"},".":{"win1252":"%2E","utf8":"%2E"},"/":{"win1252":"%2F","utf8":"%2F"},":":{"win1252":"%3A","utf8":"%3A"},";":{"win1252":"%3B","utf8":"%3B"},"<":{"win1252":"%3C","utf8":"%3C"},"=":{"win1252":"%3D","utf8":"%3D"},">":{"win1252":"%3E","utf8":"%3E"},"?":{"win1252":"%3F","utf8":"%3F"},"@":{"win1252":"%40","utf8":"%40"},"A":{"win1252":"%41","utf8":"%41"},"B":{"win1252":"%42","utf8":"%42"},"C":{"win1252":"%43","utf8":"%43"},"D":{"win1252":"%44","utf8":"%44"},"E":{"win1252":"%45","utf8":"%45"},"F":{"win1252":"%46","utf8":"%46"},"G":{"win1252":"%47","utf8":"%47"},"H":{"win1252":"%48","utf8":"%48"},"I":{"win1252":"%49","utf8":"%49"},"J":{"win1252":"%4A","utf8":"%4A"},"K":{"win1252":"%4B","utf8":"%4B"},"L":{"win1252":"%4C","utf8":"%4C"},"M":{"win1252":"%4D","utf8":"%4D"},"N":{"win1252":"%4E","utf8":"%4E"},"O":{"win1252":"%4F","utf8":"%4F"},"P":{"win1252":"%50","utf8":"%50"},"Q":{"win1252":"%51","utf8":"%51"},"R":{"win1252":"%52","utf8":"%52"},"S":{"win1252":"%53","utf8":"%53"},"T":{"win1252":"%54","utf8":"%54"},"U":{"win1252":"%55","utf8":"%55"},"V":{"win1252":"%56","utf8":"%56"},"W":{"win1252":"%57","utf8":"%57"},"X":{"win1252":"%58","utf8":"%58"},"Y":{"win1252":"%59","utf8":"%59"},"Z":{"win1252":"%5A","utf8":"%5A"},"[":{"win1252":"%5B","utf8":"%5B"},"\\":{"win1252":"%5C","utf8":"%5C"},"]":{"win1252":"%5D","utf8":"%5D"},"^":{"win1252":"%5E","utf8":"%5E"},"_":{"win1252":"%5F","utf8":"%5F"},"`":{"win1252":"%80","utf8":"%E2%82%AC"},"a":{"win1252":"%61","utf8":"%61"},"b":{"win1252":"%62","utf8":"%62"},"c":{"win1252":"%63","utf8":"%63"},"d":{"win1252":"%64","utf8":"%64"},"e":{"win1252":"%65","utf8":"%65"},"f":{"win1252":"%66","utf8":"%66"},"g":{"win1252":"%67","utf8":"%67"},"h":{"win1252":"%68","utf8":"%68"},"i":{"win1252":"%69","utf8":"%69"},"j":{"win1252":"%6A","utf8":"%6A"},"k":{"win1252":"%6B","utf8":"%6B"},"l":{"win1252":"%6C","utf8":"%6C"},"m":{"win1252":"%6D","utf8":"%6D"},"n":{"win1252":"%6E","utf8":"%6E"},"o":{"win1252":"%6F","utf8":"%6F"},"p":{"win1252":"%70","utf8":"%70"},"q":{"win1252":"%71","utf8":"%71"},"r":{"win1252":"%72","utf8":"%72"},"s":{"win1252":"%73","utf8":"%73"},"t":{"win1252":"%74","utf8":"%74"},"u":{"win1252":"%75","utf8":"%75"},"v":{"win1252":"%76","utf8":"%76"},"w":{"win1252":"%77","utf8":"%77"},"x":{"win1252":"%78","utf8":"%78"},"y":{"win1252":"%79","utf8":"%79"},"z":{"win1252":"%7A","utf8":"%7A"},"{":{"win1252":"%7B","utf8":"%7B"},"|":{"win1252":"%7C","utf8":"%7C"},"}":{"win1252":"%7D","utf8":"%7D"},"~":{"win1252":"%7E","utf8":"%7E"}," ":{"win1252":"%A0","utf8":"%C2%A0"},"Â":{"win1252":"%81","utf8":"%81"},"â":{"win1252":"%82","utf8":"%E2%80%9A"},"Æ":{"win1252":"%83","utf8":"%C6%92"},"â":{"win1252":"%84","utf8":"%E2%80%9E"},"â¦":{"win1252":"%85","utf8":"%E2%80%A6"},"â ":{"win1252":"%86","utf8":"%E2%80%A0"},"â¡":{"win1252":"%87","utf8":"%E2%80%A1"},"Ë":{"win1252":"%88","utf8":"%CB%86"},"â°":{"win1252":"%89","utf8":"%E2%80%B0"},"Å ":{"win1252":"%8A","utf8":"%C5%A0"},"â¹":{"win1252":"%8B","utf8":"%E2%80%B9"},"Å":{"win1252":"%8C","utf8":"%C5%92"},"Â":{"win1252":"%8D","utf8":"%C5%8D"},"Å½":{"win1252":"%8E","utf8":"%C5%BD"},"Â":{"win1252":"%8F","utf8":"%8F"},"Â":{"win1252":"%90","utf8":"%C2%90"},"â":{"win1252":"%91","utf8":"%E2%80%98"},"â":{"win1252":"%92","utf8":"%E2%80%99"},"â":{"win1252":"%93","utf8":"%E2%80%9C"},"â":{"win1252":"%94","utf8":"%E2%80%9D"},"â¢":{"win1252":"%95","utf8":"%E2%80%A2"},"â":{"win1252":"%96","utf8":"%E2%80%93"},"â":{"win1252":"%97","utf8":"%E2%80%94"},"Ë":{"win1252":"%98","utf8":"%CB%9C"},"â¢":{"win1252":"%99","utf8":"%E2%84"},"Å¡":{"win1252":"%9A","utf8":"%C5%A1"},"âº":{"win1252":"%9B","utf8":"%E2%80"},"Å":{"win1252":"%9C","utf8":"%C5%93"},"Â":{"win1252":"%9D","utf8":"%9D"},"Å¾":{"win1252":"%9E","utf8":"%C5%BE"},"Å¸":{"win1252":"%9F","utf8":"%C5%B8"},"Â¡":{"win1252":"%A1","utf8":"%C2%A1"},"Â¢":{"win1252":"%A2","utf8":"%C2%A2"},"Â£":{"win1252":"%A3","utf8":"%C2%A3"},"Â¤":{"win1252":"%A4","utf8":"%C2%A4"},"Â¥":{"win1252":"%A5","utf8":"%C2%A5"},"Â¦":{"win1252":"%A6","utf8":"%C2%A6"},"Â§":{"win1252":"%A7","utf8":"%C2%A7"},"Â¨":{"win1252":"%A8","utf8":"%C2%A8"},"Â©":{"win1252":"%A9","utf8":"%C2%A9"},"Âª":{"win1252":"%AA","utf8":"%C2%AA"},"Â«":{"win1252":"%AB","utf8":"%C2%AB"},"Â¬":{"win1252":"%AC","utf8":"%C2%AC"},"Â­":{"win1252":"%AD","utf8":"%C2%AD"},"Â®":{"win1252":"%AE","utf8":"%C2%AE"},"Â¯":{"win1252":"%AF","utf8":"%C2%AF"},"Â°":{"win1252":"%B0","utf8":"%C2%B0"},"Â±":{"win1252":"%B1","utf8":"%C2%B1"},"Â²":{"win1252":"%B2","utf8":"%C2%B2"},"Â³":{"win1252":"%B3","utf8":"%C2%B3"},"Â´":{"win1252":"%B4","utf8":"%C2%B4"},"Âµ":{"win1252":"%B5","utf8":"%C2%B5"},"Â¶":{"win1252":"%B6","utf8":"%C2%B6"},"Â·":{"win1252":"%B7","utf8":"%C2%B7"},"Â¸":{"win1252":"%B8","utf8":"%C2%B8"},"Â¹":{"win1252":"%B9","utf8":"%C2%B9"},"Âº":{"win1252":"%BA","utf8":"%C2%BA"},"Â»":{"win1252":"%BB","utf8":"%C2%BB"},"Â¼":{"win1252":"%BC","utf8":"%C2%BC"},"Â½":{"win1252":"%BD","utf8":"%C2%BD"},"Â¾":{"win1252":"%BE","utf8":"%C2%BE"},"Â¿":{"win1252":"%BF","utf8":"%C2%BF"},"Ã":{"win1252":"%C0","utf8":"%C3%80"},"Ã":{"win1252":"%C1","utf8":"%C3%81"},"Ã":{"win1252":"%C2","utf8":"%C3%82"},"Ã":{"win1252":"%C3","utf8":"%C3%83"},"Ã":{"win1252":"%C4","utf8":"%C3%84"},"Ã":{"win1252":"%C5","utf8":"%C3%85"},"Ã":{"win1252":"%C6","utf8":"%C3%86"},"Ã":{"win1252":"%C7","utf8":"%C3%87"},"Ã":{"win1252":"%C8","utf8":"%C3%88"},"Ã":{"win1252":"%C9","utf8":"%C3%89"},"Ã":{"win1252":"%CA","utf8":"%C3%8A"},"Ã":{"win1252":"%CB","utf8":"%C3%8B"},"Ã":{"win1252":"%CC","utf8":"%C3%8C"},"Ã":{"win1252":"%CD","utf8":"%C3%8D"},"Ã":{"win1252":"%CE","utf8":"%C3%8E"},"Ã":{"win1252":"%CF","utf8":"%C3%8F"},"Ã":{"win1252":"%D0","utf8":"%C3%90"},"Ã":{"win1252":"%D1","utf8":"%C3%91"},"Ã":{"win1252":"%D2","utf8":"%C3%92"},"Ã":{"win1252":"%D3","utf8":"%C3%93"},"Ã":{"win1252":"%D4","utf8":"%C3%94"},"Ã":{"win1252":"%D5","utf8":"%C3%95"},"Ã":{"win1252":"%D6","utf8":"%C3%96"},"Ã":{"win1252":"%D7","utf8":"%C3%97"},"Ã":{"win1252":"%D8","utf8":"%C3%98"},"Ã":{"win1252":"%D9","utf8":"%C3%99"},"Ã":{"win1252":"%DA","utf8":"%C3%9A"},"Ã":{"win1252":"%DB","utf8":"%C3%9B"},"Ã":{"win1252":"%DC","utf8":"%C3%9C"},"Ã":{"win1252":"%DD","utf8":"%C3%9D"},"Ã":{"win1252":"%DE","utf8":"%C3%9E"},"Ã":{"win1252":"%DF","utf8":"%C3%9F"},"Ã ":{"win1252":"%E0","utf8":"%C3%A0"},"Ã¡":{"win1252":"%E1","utf8":"%C3%A1"},"Ã¢":{"win1252":"%E2","utf8":"%C3%A2"},"Ã£":{"win1252":"%E3","utf8":"%C3%A3"},"Ã¤":{"win1252":"%E4","utf8":"%C3%A4"},"Ã¥":{"win1252":"%E5","utf8":"%C3%A5"},"Ã¦":{"win1252":"%E6","utf8":"%C3%A6"},"Ã§":{"win1252":"%E7","utf8":"%C3%A7"},"Ã¨":{"win1252":"%E8","utf8":"%C3%A8"},"Ã©":{"win1252":"%E9","utf8":"%C3%A9"},"Ãª":{"win1252":"%EA","utf8":"%C3%AA"},"Ã«":{"win1252":"%EB","utf8":"%C3%AB"},"Ã¬":{"win1252":"%EC","utf8":"%C3%AC"},"Ã­":{"win1252":"%ED","utf8":"%C3%AD"},"Ã®":{"win1252":"%EE","utf8":"%C3%AE"},"Ã¯":{"win1252":"%EF","utf8":"%C3%AF"},"Ã°":{"win1252":"%F0","utf8":"%C3%B0"},"Ã±":{"win1252":"%F1","utf8":"%C3%B1"},"Ã²":{"win1252":"%F2","utf8":"%C3%B2"},"Ã³":{"win1252":"%F3","utf8":"%C3%B3"},"Ã´":{"win1252":"%F4","utf8":"%C3%B4"},"Ãµ":{"win1252":"%F5","utf8":"%C3%B5"},"Ã¶":{"win1252":"%F6","utf8":"%C3%B6"},"Ã·":{"win1252":"%F7","utf8":"%C3%B7"},"Ã¸":{"win1252":"%F8","utf8":"%C3%B8"},"Ã¹":{"win1252":"%F9","utf8":"%C3%B9"},"Ãº":{"win1252":"%FA","utf8":"%C3%BA"},"Ã»":{"win1252":"%FB","utf8":"%C3%BB"},"Ã¼":{"win1252":"%FC","utf8":"%C3%BC"},"Ã½":{"win1252":"%FD","utf8":"%C3%BD"},"Ã¾":{"win1252":"%FE","utf8":"%C3%BE"},"Ã¿":{"win1252":"%FF","utf8":"%C3%BF"}}
          this.ISOLanguageCodes = {"ab":"Abkhazian","aa":"Afar","af":"Afrikaans","ak":"Akan","sq":"Albanian","am":"Amharic","ar":"Arabic","an":"Aragonese","hy":"Armenian","as":"Assamese","av":"Avaric","ae":"Avestan","ay":"Aymara","az":"Azerbaijani","bm":"Bambara","ba":"Bashkir","eu":"Basque","be":"Belarusian","bn":"Bengali (Bangla)","bh":"Bihari","bi":"Bislama","bs":"Bosnian","br":"Breton","bg":"Bulgarian","my":"Burmese","ca":"Catalan","ch":"Chamorro","ce":"Chechen","ny":"Chichewa, Chewa, Nyanja","zh":"Chinese","zh-Hans":"Chinese (Simplified)","zh-Hant":"Chinese (Traditional)","cv":"Chuvash","kw":"Cornish","co":"Corsican","cr":"Cree","hr":"Croatian","cs":"Czech","da":"Danish","dv":"Divehi, Dhivehi, Maldivian","nl":"Dutch","dz":"Dzongkha","en":"English","eo":"Esperanto","et":"Estonian","ee":"Ewe","fo":"Faroese","fj":"Fijian","fi":"Finnish","fr":"French","ff":"Fula, Fulah, Pulaar, Pular","gl":"Galician","gd":"Gaelic (Scottish)","gv":"Manx","ka":"Georgian","de":"German","el":"Greek","kl":"Kalaallisut, Greenlandic","gn":"Guarani","gu":"Gujarati","ht":"Haitian Creole","ha":"Hausa","he":"Hebrew","hz":"Herero","hi":"Hindi","ho":"Hiri Motu","hu":"Hungarian","is":"Icelandic","io":"Ido","ig":"Igbo","id, in":"Indonesian","ia":"Interlingua","ie":"Interlingue","iu":"Inuktitut","ik":"Inupiak","ga":"Irish","it":"Italian","ja":"Japanese","jv":"Javanese","kn":"Kannada","kr":"Kanuri","ks":"Kashmiri","kk":"Kazakh","km":"Khmer","ki":"Kikuyu","rw":"Kinyarwanda (Rwanda)","rn":"Kirundi","ky":"Kyrgyz","kv":"Komi","kg":"Kongo","ko":"Korean","ku":"Kurdish","kj":"Kwanyama","lo":"Lao","la":"Latin","lv":"Latvian (Lettish)","li":"Limburgish ( Limburger)","ln":"Lingala","lt":"Lithuanian","lu":"Luga-Katanga","lg":"Luganda, Ganda","lb":"Luxembourgish","mk":"Macedonian","mg":"Malagasy","ms":"Malay","ml":"Malayalam","mt":"Maltese","mi":"Maori","mr":"Marathi","mh":"Marshallese","mo":"Moldavian","mn":"Mongolian","na":"Nauru","nv":"Navajo","ng":"Ndonga","nd":"Northern Ndebele","ne":"Nepali","no":"Norwegian","nb":"Norwegian bokmÃ¥l","nn":"Norwegian nynorsk","ii":"Sichuan Yi","oc":"Occitan","oj":"Ojibwe","cu":"Old Church Slavonic, Old Bulgarian","or":"Oriya","om":"Oromo (Afaan Oromo)","os":"Ossetian","pi":"PÄli","ps":"Pashto, Pushto","fa":"Persian (Farsi)","pl":"Polish","pt":"Portuguese","pa":"Punjabi (Eastern)","qu":"Quechua","rm":"Romansh","ro":"Romanian","ru":"Russian","se":"Sami","sm":"Samoan","sg":"Sango","sa":"Sanskrit","sr":"Serbian","sh":"Serbo-Croatian","st":"Sesotho","tn":"Setswana","sn":"Shona","sd":"Sindhi","si":"Sinhalese","ss":"Swati","sk":"Slovak","sl":"Slovenian","so":"Somali","nr":"Southern Ndebele","es":"Spanish","su":"Sundanese","sw":"Swahili (Kiswahili)","sv":"Swedish","tl":"Tagalog","ty":"Tahitian","tg":"Tajik","ta":"Tamil","tt":"Tatar","te":"Telugu","th":"Thai","bo":"Tibetan","ti":"Tigrinya","to":"Tonga","ts":"Tsonga","tr":"Turkish","tk":"Turkmen","tw":"Twi","ug":"Uyghur","uk":"Ukrainian","ur":"Urdu","uz":"Uzbek","ve":"Venda","vi":"Vietnamese","vo":"VolapÃ¼k","wa":"Wallon","cy":"Welsh","wo":"Wolof","fy":"Western Frisian","xh":"Xhosa","yi, ji":"Yiddish","yo":"Yoruba","za":"Zhuang, Chuang","zu":"Zulu"}
          this.ISOCountryCodes = {"AF":"AFGHANISTAN","AL":"ALBANIA","DZ":"ALGERIA","AS":"AMERICAN SAMOA","AD":"ANDORRA","AO":"ANGOLA","AQ":"ANTARCTICA","AG":"ANTIGUA AND BARBUDA","AR":"ARGENTINA","AM":"ARMENIA","AW":"ARUBA","AU":"AUSTRALIA","AT":"AUSTRIA","AZ":"AZERBAIJAN","BS":"BAHAMAS","BH":"BAHRAIN","BD":"BANGLADESH","BB":"BARBADOS","BY":"BELARUS","BE":"BELGIUM","BZ":"BELIZE","BJ":"BENIN","BM":"BERMUDA","BT":"BHUTAN","BO":"BOLIVIA","BA":"BOSNIA AND HERZEGOVINA","BW":"BOTSWANA","BV":"BOUVET ISLAND","BR":"BRAZIL","IO":"BRITISH INDIAN OCEAN TERRITORY","BN":"BRUNEI DARUSSALAM","BG":"BULGARIA","BF":"BURKINA FASO","BI":"BURUNDI","KH":"CAMBODIA","CM":"CAMEROON","CA":"CANADA","CV":"CAPE VERDE","KY":"CAYMAN ISLANDS","CF":"CENTRAL AFRICAN REPUBLIC","TD":"CHAD","CL":"CHILE","CN":"CHINA","CX":"CHRISTMAS ISLAND","CC":"COCOS (KEELING) ISLANDS","CO":"COLOMBIA","KM":"COMOROS","CG":"CONGO","CD":"CONGO, THE DEMOCRATIC REPUBLIC OF THE","CK":"COOK ISLANDS","CR":"COSTA RICA","CI":"CÃTE D'IVOIRE","HR":"CROATIA","CU":"CUBA","CY":"CYPRUS","CZ":"CZECH REPUBLIC","DK":"DENMARK","DJ":"DJIBOUTI","DM":"DOMINICA","DO":"DOMINICAN REPUBLIC","EC":"ECUADOR","EG":"EGYPT","SV":"EL SALVADOR","GQ":"EQUATORIAL GUINEA","ER":"ERITREA","EE":"ESTONIA","ET":"ETHIOPIA","FK":"FALKLAND ISLANDS (MALVINAS)","FO":"FAROE ISLANDS","FJ":"FIJI","FI":"FINLAND","FR":"FRANCE","GF":"FRENCH GUIANA","PF":"FRENCH POLYNESIA","TF":"FRENCH SOUTHERN TERRITORIES","GA":"GABON","GM":"GAMBIA","GE":"GEORGIA","DE":"GERMANY","GH":"GHANA","GI":"GIBRALTAR","GR":"GREECE","GL":"GREENLAND","GD":"GRENADA","GP":"GUADELOUPE","GU":"GUAM","GT":"GUATEMALA","GN":"GUINEA","GW":"GUINEA-BISSAU","GY":"GUYANA","HT":"HAITI","HM":"HEARD ISLAND AND MCDONALD ISLANDS","HN":"HONDURAS","HK":"HONG KONG","HU":"HUNGARY","IS":"ICELAND","IN":"INDIA","ID":"INDONESIA","IR":"IRAN, ISLAMIC REPUBLIC OF","IQ":"IRAQ","IE":"IRELAND","IL":"ISRAEL","IT":"ITALY","JM":"JAMAICA","JP":"JAPAN","JO":"JORDAN","KZ":"KAZAKHSTAN","KE":"KENYA","KI":"KIRIBATI","KP":"KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF","KR":"KOREA, REPUBLIC OF","KW":"KUWAIT","KG":"KYRGYZSTAN","LA":"LAO PEOPLE'S DEMOCRATIC REPUBLIC(LAOS)","LV":"LATVIA","LB":"LEBANON","LS":"LESOTHO","LR":"LIBERIA","LY":"LIBYA, STATE OF","LI":"LIECHTENSTEIN","LT":"LITHUANIA","LU":"LUXEMBOURG","MO":"MACAO","MK":"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF","MG":"MADAGASCAR","MW":"MALAWI","MY":"MALAYSIA","MV":"MALDIVES","ML":"MALI","MT":"MALTA","MH":"MARSHALL ISLANDS","MQ":"MARTINIQUE","MR":"MAURITANIA","MU":"MAURITIUS","YT":"MAYOTTE","MX":"MEXICO","FM":"MICRONESIA, FEDERATED STATES OF","MD":"MOLDOVA, REPUBLIC OF","MC":"MONACO","MN":"MONGOLIA","ME":"MONTENEGRO","MS":"MONTSERRAT","MA":"MOROCCO","MZ":"MOZAMBIQUE","MM":"MYANMAR","NA":"NAMIBIA","NR":"NAURU","NP":"NEPAL, FEDERAL DEMOCRATIC REPUBLIC OF","NL":"NETHERLANDS","AN":"NETHERLANDS ANTILLES","NC":"NEW CALEDONIA","NZ":"NEW ZEALAND","NI":"NICARAGUA","NE":"NIGER","NG":"NIGERIA","NU":"NIUE","NF":"NORFOLK ISLAND","MP":"NORTHERN MARIANA ISLANDS","NO":"NORWAY","OM":"OMAN","PK":"PAKISTAN","PW":"PALAU","PS":"PALESTINE, STATE OF","PA":"PANAMA","PG":"PAPUA NEW GUINEA","PY":"PARAGUAY","PE":"PERU","PH":"PHILIPPINES","PN":"PITCAIRN","PL":"POLAND","PT":"PORTUGAL","PR":"PUERTO RICO","QA":"QATAR","RE":"RÃUNION","RO":"ROMANIA","RU":"RUSSIAN FEDERATION","RW":"RWANDA","SH":"SAINT HELENA","KN":"SAINT KITTS AND NEVIS","LC":"SAINT LUCIA","PM":"SAINT PIERRE AND MIQUELON","VC":"SAINT VINCENT AND THE GRENADINES","WS":"SAMOA","SM":"SAN MARINO","ST":"SAO TOME AND PRINCIPE","SA":"SAUDI ARABIA","SN":"SENEGAL","RS":"SERBIA","SC":"SEYCHELLES","SL":"SIERRA LEONE","SG":"SINGAPORE","SK":"SLOVAKIA","SI":"SLOVENIA","SB":"SOLOMON ISLANDS","SO":"SOMALIA","ZA":"SOUTH AFRICA","GS":"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS","SS":"SOUTH SUDAN","ES":"SPAIN","LK":"SRI LANKA","SD":"SUDAN","SR":"SURINAME","SJ":"SVALBARD AND JAN MAYEN","SZ":"SWAZILAND","SE":"SWEDEN","CH":"SWITZERLAND","SY":"SYRIAN ARAB REPUBLIC","TW":"TAIWAN","TJ":"TAJIKISTAN","TZ":"TANZANIA, UNITED REPUBLIC OF","TH":"THAILAND","TL":"TIMOR-LESTE","TG":"TOGO","TK":"TOKELAU","TO":"TONGA","TT":"TRINIDAD AND TOBAGO","TN":"TUNISIA","TR":"TURKEY","TM":"TURKMENISTAN","TC":"TURKS AND CAICOS ISLANDS","TV":"TUVALU","UG":"UGANDA","UA":"UKRAINE","AE":"UNITED ARAB EMIRATES","GB":"UNITED KINGDOM","US":"UNITED STATES","UM":"UNITED STATES MINOR OUTLYING ISLANDS","UY":"URUGUAY","UZ":"UZBEKISTAN","VU":"VANUATU","VE":"VENEZUELA","VN":"VIET NAM","VG":"VIRGIN ISLANDS, BRITISH","VI":"VIRGIN ISLANDS, U.S.","WF":"WALLIS AND FUTUNA","EH":"WESTERN SAHARA","YE":"YEMEN","ZM":"ZAMBIA","ZW":"ZIMBABWE"}
          this.HTTPStatusMessages = {"100":[" Continue"," The server has received the request headers, and the client should proceed to send the request body"],"101":[" Switching Protocols","The requester has asked the server to switch protocols"],"103":[" Checkpoint","Used in the resumable requests proposal to resume aborted PUT or POST requests"],"200":[" OK","The request is OK (this is the standard response for successful HTTP requests)"],"201":[" Created","The request has been fulfilled, and a new resource is\n created \n "],"202":[" Accepted","The request has been accepted for processing, but the processing\n has not been completed\n "],"203":[" Non-Authoritative Information","The request has been successfully processed, but is returning information that may be from another source"],"204":[" No Content","The request has been successfully processed, but is not returning any content"],"205":[" Reset Content","The request has been successfully processed, but is not returning any content, and requires that the requester reset the document view"],"206":[" Partial Content","The server is delivering only part of the resource due to a range header sent by the client"],"300":[" Multiple Choices","A link list. The user can select a link and go to that\n location. Maximum five addresses  "],"301":[" Moved Permanently","The requested page has moved to a new URL \n "],"302":[" Found","The requested page has moved temporarily to a new URL \n "],"303":[" See Other","The requested page can be found under a different URL"],"304":[" Not Modified","Indicates the requested page has not been modified since last requested"],"306":[" Switch Proxy","No longer used"],"307":[" Temporary Redirect","The requested page has moved temporarily to a new URL"],"308":[" Resume Incomplete","Used in the resumable requests proposal to resume aborted PUT or POST requests"],"400":[" Bad Request","The request cannot be fulfilled due to bad syntax"],"401":[" Unauthorized","The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided"],"402":[" Payment Required","Reserved for future use\n "],"403":[" Forbidden","The request was a legal request, but the server is refusing to respond to it"],"404":[" Not Found","The requested page could not be found but may be available again in the future"],"405":[" Method Not Allowed","A request was made of a page using a request method not supported by that page"],"406":[" Not Acceptable","The server can only generate a response that is not\n accepted by the client\n "],"407":[" Proxy Authentication Required","The client must first authenticate itself with the proxy\n "],"408":[" Request Timeout","The server timed out waiting for the request\n "],"409":[" Conflict","The request could not be completed because of a conflict\n in the request"],"410":[" Gone","The requested page is no longer available"],"411":[" Length Required","The \"Content-Length\" is not defined. The server\n will not accept the request without it \n "],"412":[" Precondition Failed","The precondition given in the request evaluated to false by\n the server\n "],"413":[" Request Entity Too Large","The server will not accept the request, because the request entity is\n too large\n "],"414":[" Request-URI Too Long","The server will not accept the request, because the URL is\n too long. Occurs when you convert a POST request to a GET request with\n a long query information \n "],"415":[" Unsupported Media Type","The server will not accept the request, because the media\n type is not supported \n "],"416":[" Requested Range Not Satisfiable","The client has asked for a portion of the file, but the server cannot supply that portion"],"417":[" Expectation Failed","The server cannot meet the requirements of the Expect request-header field"],"500":[" Internal Server Error","A generic error message, given when no more specific message is suitable"],"501":[" Not Implemented","The server either does not recognize the request method, or it lacks the ability to fulfill the request"],"502":[" Bad Gateway","The server was acting as a gateway or proxy and received an invalid response from the upstream server"],"503":[" Service Unavailable","The server is currently unavailable (overloaded or down)\n "],"504":[" Gateway Timeout","The server was acting as a gateway or proxy and did not receive a timely response from the upstream server"],"505":[" HTTP Version Not Supported","The server does not support the HTTP protocol version used in the request\n "],"511":[" Network Authentication Required","The client needs to authenticate to gain network access"]}
          

     }
}